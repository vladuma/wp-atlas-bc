'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const React = require('react');
const common = require('../common.js');
const utils = require('../utils.js');

function createSSRHelpers(client, { defaults: { refetchAfterHydrate } }) {
  const prepareReactRender = async function prepareReactRender2(element) {
    const ssrPrepass = utils.getDefault(await Promise.resolve().then(function () { return require('react-ssr-prepass'); }));
    return client.prepareRender(() => ssrPrepass(element));
  };
  const useHydrateCache = function useHydrateCache2({
    cacheSnapshot,
    shouldRefetch = refetchAfterHydrate
  }) {
    common.useOnFirstMount(() => {
      if (cacheSnapshot) {
        client.hydrateCache({ cacheSnapshot, shouldRefetch: false });
      }
    });
    React.useEffect(() => {
      if (shouldRefetch) {
        client.refetch(client.query).catch(console.error);
      }
    }, [shouldRefetch]);
  };
  return {
    useHydrateCache,
    prepareReactRender
  };
}

exports.createSSRHelpers = createSSRHelpers;
