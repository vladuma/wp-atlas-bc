{"version":3,"file":"index.esm.js","sources":["../../../dist/plugins/other/schema-ast/src/index.js"],"sourcesContent":["import { lexicographicSortSchema, printSchema, visit, buildASTSchema, parse as parseSchema, } from 'graphql';\nimport { removeFederation } from '@graphql-codegen/plugin-helpers';\nimport { extname } from 'path';\nimport { printSchemaWithDirectives } from '@graphql-tools/utils';\nexport const plugin = async (schema, _documents, { commentDescriptions = false, includeDirectives = false, sort = false, federation }) => {\n    let outputSchema = federation ? removeFederation(schema) : schema;\n    outputSchema = sort ? lexicographicSortSchema(outputSchema) : outputSchema;\n    if (includeDirectives) {\n        return printSchemaWithDirectives(outputSchema);\n    }\n    return printSchema(outputSchema, { commentDescriptions: commentDescriptions });\n};\nexport const validate = async (_schema, _documents, _config, outputFile, allPlugins) => {\n    const singlePlugin = allPlugins.length === 1;\n    if (singlePlugin && extname(outputFile) !== '.graphql') {\n        throw new Error(`Plugin \"schema-ast\" requires extension to be \".graphql\"!`);\n    }\n};\nexport function transformSchemaAST(schema, config) {\n    const printedSchema = printSchema(schema);\n    const astNode = parseSchema(printedSchema);\n    const transformedAST = config.disableDescriptions\n        ? visit(astNode, {\n            leave: node => ({\n                ...node,\n                description: undefined,\n            }),\n        })\n        : astNode;\n    const transformedSchema = config.disableDescriptions ? buildASTSchema(transformedAST) : schema;\n    return {\n        schema: transformedSchema,\n        ast: transformedAST,\n    };\n}\n//# sourceMappingURL=index.js.map"],"names":["parseSchema"],"mappings":";;;;;AAIY,MAAC,MAAM,GAAG,OAAO,MAAM,EAAE,UAAU,EAAE,EAAE,mBAAmB,GAAG,KAAK,EAAE,iBAAiB,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,UAAU,EAAE,KAAK;AAC1I,IAAI,IAAI,YAAY,GAAG,UAAU,GAAG,gBAAgB,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;AACtE,IAAI,YAAY,GAAG,IAAI,GAAG,uBAAuB,CAAC,YAAY,CAAC,GAAG,YAAY,CAAC;AAC/E,IAAI,IAAI,iBAAiB,EAAE;AAC3B,QAAQ,OAAO,yBAAyB,CAAC,YAAY,CAAC,CAAC;AACvD,KAAK;AACL,IAAI,OAAO,WAAW,CAAC,YAAY,EAAE,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,CAAC,CAAC;AACnF,EAAE;AACU,MAAC,QAAQ,GAAG,OAAO,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,KAAK;AACxF,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC;AACjD,IAAI,IAAI,YAAY,IAAI,OAAO,CAAC,UAAU,CAAC,KAAK,UAAU,EAAE;AAC5D,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,wDAAwD,CAAC,CAAC,CAAC;AACpF,KAAK;AACL,EAAE;AACK,SAAS,kBAAkB,CAAC,MAAM,EAAE,MAAM,EAAE;AACnD,IAAI,MAAM,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;AAC9C,IAAI,MAAM,OAAO,GAAGA,KAAW,CAAC,aAAa,CAAC,CAAC;AAC/C,IAAI,MAAM,cAAc,GAAG,MAAM,CAAC,mBAAmB;AACrD,UAAU,KAAK,CAAC,OAAO,EAAE;AACzB,YAAY,KAAK,EAAE,IAAI,KAAK;AAC5B,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,WAAW,EAAE,SAAS;AACtC,aAAa,CAAC;AACd,SAAS,CAAC;AACV,UAAU,OAAO,CAAC;AAClB,IAAI,MAAM,iBAAiB,GAAG,MAAM,CAAC,mBAAmB,GAAG,cAAc,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC;AACnG,IAAI,OAAO;AACX,QAAQ,MAAM,EAAE,iBAAiB;AACjC,QAAQ,GAAG,EAAE,cAAc;AAC3B,KAAK,CAAC;AACN;;;;"}