{"version":3,"file":"createFetchFetcher.js","mappings":"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","sources":["webpack://@spree/storefront-api-v2-sdk/webpack/universalModuleDefinition","webpack://@spree/storefront-api-v2-sdk/./src/errors/FetchError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/SpreeSDKError.ts","webpack://@spree/storefront-api-v2-sdk/./src/fetchers/createFetchFetcher.ts","webpack://@spree/storefront-api-v2-sdk/./src/helpers/request.ts","webpack://@spree/storefront-api-v2-sdk/external commonjs \"node-fetch\"","webpack://@spree/storefront-api-v2-sdk/webpack/bootstrap","webpack://@spree/storefront-api-v2-sdk/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SpreeSDK\"] = factory();\n\telse\n\t\troot[\"SpreeSDK\"] = root[\"SpreeSDK\"] || {}, root[\"SpreeSDK\"][\"createFetchFetcher\"] = factory();\n})(global, function() {\nreturn ","import type { RawFetchRequest } from '../interfaces/RawFetchRequest'\nimport type { RawFetchResponse } from '../interfaces/RawFetchResponse'\nimport SpreeSDKError from './SpreeSDKError'\n\nexport default class FetchError extends SpreeSDKError {\n  public response?: RawFetchResponse\n  public request?: RawFetchRequest\n  public data?: any\n\n  constructor(response?: RawFetchResponse, request?: unknown, data?: unknown, message?: string) {\n    super(message)\n    Object.setPrototypeOf(this, FetchError.prototype)\n    this.name = 'FetchError'\n    this.response = response\n    this.request = request\n    this.data = data\n  }\n}\n","export default class SpreeSDKError extends Error {\n  constructor(message: string) {\n    super(message)\n    Object.setPrototypeOf(this, SpreeSDKError.prototype)\n    this.name = 'SpreeSDKError'\n  }\n}\n","import FetchError from '../errors/FetchError'\nimport { objectToQuerystring } from '../helpers/request'\nimport type { CreateFetcher } from '../interfaces/ClientConfig'\nimport type { CreateCustomizedFetchFetcher } from '../interfaces/CreateCustomizedFetchFetcher'\n\nconst createCustomizedFetchFetcher: CreateCustomizedFetchFetcher = (fetcherOptions) => {\n  const sharedHeaders = { 'Content-Type': 'application/json' }\n\n  const { host, fetch, requestConstructor } = fetcherOptions\n\n  return {\n    fetch: async (fetchOptions) => {\n      try {\n        const { url, params, method, headers, responseParsing } = fetchOptions\n        const absoluteUrl = new URL(url, host)\n        let payload\n\n        switch (method.toUpperCase()) {\n          case 'PUT':\n          case 'POST':\n          case 'DELETE':\n          case 'PATCH':\n            payload = { body: JSON.stringify(params) }\n            break\n          default:\n            payload = null\n            absoluteUrl.search = objectToQuerystring(params)\n        }\n\n        const request = new requestConstructor(absoluteUrl.toString(), {\n          method: method.toUpperCase(),\n          headers: { ...sharedHeaders, ...headers },\n          ...payload\n        })\n\n        try {\n          const response = await fetch(request)\n          const responseContentType = response.headers.get('content-type')\n          let data\n\n          if (responseParsing === 'automatic') {\n            if (\n              !responseContentType ||\n              (!responseContentType.includes('application/json') &&\n                !responseContentType.includes('application/vnd.api+json'))\n            ) {\n              data = await response.text()\n            } else {\n              data = await response.json()\n            }\n          } else if (responseParsing === 'text') {\n            data = await response.text()\n          } else if (responseParsing === 'json') {\n            data = await response.json()\n          } else if (responseParsing === 'stream') {\n            data = await response.body\n          }\n\n          if (!response.ok) {\n            // Use the \"traditional\" approach and reject non 2xx responses.\n            throw new FetchError(response, request, data)\n          }\n\n          return { data }\n        } catch (error) {\n          if (error instanceof FetchError) {\n            throw error\n          }\n\n          throw new FetchError(null, request, null, error.message)\n        }\n      } catch (error) {\n        if (error instanceof FetchError) {\n          throw error\n        }\n\n        throw new FetchError(null, null, null, error.message)\n      }\n    }\n  }\n}\n\nconst createFetchFetcher: CreateFetcher = (fetcherOptions) => {\n  let fetch\n  let Request\n\n  if (globalThis.fetch && globalThis.Request) {\n    fetch = globalThis.fetch\n    Request = globalThis.Request\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const nodeFetch = require('node-fetch')\n\n    fetch = nodeFetch.default\n    Request = nodeFetch.Request\n  }\n\n  return createCustomizedFetchFetcher({ fetch, requestConstructor: Request, ...fetcherOptions })\n}\n\nexport { createCustomizedFetchFetcher }\n\nexport default createFetchFetcher\n","// Based on https://github.com/ljharb/qs/blob/master/lib/stringify.js\n\nconst serializeDate = (date: Date) => date.toISOString()\n\nconst isBuffer = (obj) => {\n  if (!obj || typeof obj !== 'object') {\n    return false\n  }\n\n  return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj))\n}\n\nconst isNonNullishPrimitive = (v) =>\n  typeof v === 'string' ||\n  typeof v === 'number' ||\n  typeof v === 'boolean' ||\n  typeof v === 'symbol' ||\n  typeof v === 'bigint'\n\nconst hexTable = (() => {\n  const array = []\n\n  for (let i = 0; i < 256; ++i) {\n    array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase())\n  }\n\n  return array\n})()\n\nconst encode = (str, charset): string => {\n  // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n  // It has been adapted here for stricter adherence to RFC 3986\n  if (str.length === 0) {\n    return str\n  }\n\n  let string = str\n  if (typeof str === 'symbol') {\n    string = Symbol.prototype.toString.call(str)\n  } else if (typeof str !== 'string') {\n    string = String(str)\n  }\n\n  if (charset === 'iso-8859-1') {\n    return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n      return '%26%23' + parseInt($0.slice(2), 16) + '%3B'\n    })\n  }\n\n  let out = ''\n  for (let i = 0; i < string.length; ++i) {\n    let c = string.charCodeAt(i)\n\n    if (\n      c === 0x2d || // -\n      c === 0x2e || // .\n      c === 0x5f || // _\n      c === 0x7e || // ~\n      (c >= 0x30 && c <= 0x39) || // 0-9\n      (c >= 0x41 && c <= 0x5a) || // a-z\n      (c >= 0x61 && c <= 0x7a) // A-Z\n    ) {\n      out += string.charAt(i)\n      continue\n    }\n\n    if (c < 0x80) {\n      out = out + hexTable[c]\n      continue\n    }\n\n    if (c < 0x800) {\n      out = out + (hexTable[0xc0 | (c >> 6)] + hexTable[0x80 | (c & 0x3f)])\n      continue\n    }\n\n    if (c < 0xd800 || c >= 0xe000) {\n      out = out + (hexTable[0xe0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3f)] + hexTable[0x80 | (c & 0x3f)])\n      continue\n    }\n\n    i += 1\n    c = 0x10000 + (((c & 0x3ff) << 10) | (string.charCodeAt(i) & 0x3ff))\n    out +=\n      hexTable[0xf0 | (c >> 18)] +\n      hexTable[0x80 | ((c >> 12) & 0x3f)] +\n      hexTable[0x80 | ((c >> 6) & 0x3f)] +\n      hexTable[0x80 | (c & 0x3f)]\n  }\n\n  return out\n}\n\nconst isArray = Array.isArray\n\nconst push = Array.prototype.push\n\nconst pushToArray = (arr, valueOrArray) => {\n  push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray])\n}\n\nconst rfc3986Formatter = (value): string => {\n  return String(value)\n}\n\nconst generateBracketsArrayPrefix = (prefix: string, _key: string): string => prefix + '[]'\n\nconst charset = 'utf-8'\n\nconst stringify = (source: unknown, prefix: string) => {\n  if (source instanceof Date) {\n    source = serializeDate(source)\n  }\n\n  if (source === null) {\n    source = ''\n  }\n\n  if (isNonNullishPrimitive(source) || isBuffer(source)) {\n    const keyValue = encode(prefix, charset)\n\n    return [rfc3986Formatter(keyValue) + '=' + rfc3986Formatter(encode(source, charset))]\n  }\n\n  const values = []\n\n  if (typeof source === 'undefined') {\n    return values\n  }\n\n  const objKeys = Object.keys(source)\n\n  for (let i = 0; i < objKeys.length; ++i) {\n    const key = objKeys[i]\n    const value = source[key]\n\n    const keyPrefix = isArray(source) ? generateBracketsArrayPrefix(prefix, key) : prefix + ('[' + key + ']')\n\n    pushToArray(values, stringify(value, keyPrefix))\n  }\n\n  return values\n}\n\n/**\n * Serializes object into a query string understood by Spree.\n * Spree uses the \"brackets\" format for serializing arrays which\n * is a different format than used by URLSearchParams.\n */\nconst objectToQuerystring = (source: Record<string, any>): string => {\n  const topLevelKeys = []\n\n  const objKeys = Object.keys(source)\n\n  for (let i = 0; i < objKeys.length; ++i) {\n    const key = objKeys[i]\n\n    pushToArray(topLevelKeys, stringify(source[key], key))\n  }\n\n  return topLevelKeys.join('&')\n}\n\nexport { objectToQuerystring }\n","module.exports = require(\"node-fetch\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(990);\n"],"names":["root","factory","exports","module","define","amd","global","FetchError","constructor","response","request","data","message","super","Object","setPrototypeOf","this","prototype","name","SpreeSDKError","Error","createCustomizedFetchFetcher","fetcherOptions","sharedHeaders","host","fetch","requestConstructor","async","fetchOptions","url","params","method","headers","responseParsing","absoluteUrl","URL","payload","toUpperCase","body","JSON","stringify","search","objectToQuerystring","toString","responseContentType","get","includes","json","text","ok","error","Request","globalThis","nodeFetch","default","hexTable","array","i","push","encode","str","charset","length","string","Symbol","call","String","escape","replace","$0","parseInt","slice","out","c","charCodeAt","charAt","isArray","Array","pushToArray","arr","valueOrArray","apply","rfc3986Formatter","value","generateBracketsArrayPrefix","prefix","_key","source","obj","v","Date","toISOString","isBuffer","keyValue","values","objKeys","keys","key","keyPrefix","topLevelKeys","join","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}