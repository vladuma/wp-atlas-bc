{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@spree/storefront-api-v2-sdk/webpack/universalModuleDefinition","webpack://@spree/storefront-api-v2-sdk/./src/Client.ts","webpack://@spree/storefront-api-v2-sdk/./src/Http.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Account.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Authentication.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Cart.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Checkout.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Countries.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/DigitalAssets.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Menus.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Order.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Pages.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Products.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Taxons.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/Wishlists.ts","webpack://@spree/storefront-api-v2-sdk/./src/endpoints/index.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/BasicSpreeError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/CastError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/DeserializeError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/DocumentRelationshipError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/ExpandedSpreeError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/FetchError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/MisconfigurationError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/NoResponseError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/SpreeError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/SpreeSDKError.ts","webpack://@spree/storefront-api-v2-sdk/./src/errors/index.ts","webpack://@spree/storefront-api-v2-sdk/./src/helpers/auth.ts","webpack://@spree/storefront-api-v2-sdk/./src/helpers/jsonApi.ts","webpack://@spree/storefront-api-v2-sdk/./src/helpers/request.ts","webpack://@spree/storefront-api-v2-sdk/./src/helpers/result.ts","webpack://@spree/storefront-api-v2-sdk/./src/helpers/squashAndPreparePositionalArguments.ts","webpack://@spree/storefront-api-v2-sdk/./src/index.ts","webpack://@spree/storefront-api-v2-sdk/./src/interfaces/Authentication.ts","webpack://@spree/storefront-api-v2-sdk/./src/makeClient.ts","webpack://@spree/storefront-api-v2-sdk/./src/routes.ts","webpack://@spree/storefront-api-v2-sdk/webpack/bootstrap","webpack://@spree/storefront-api-v2-sdk/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SpreeSDK\"] = factory();\n\telse\n\t\troot[\"SpreeSDK\"] = factory();\n})(self, function() {\nreturn ","import {\n  Account,\n  Products,\n  Taxons,\n  Countries,\n  Cart,\n  Checkout,\n  Authentication,\n  Order,\n  Pages,\n  DigitalAssets,\n  Menus,\n  Wishlists\n} from './endpoints'\nimport type { CreateFetcherConfig, Fetcher, IClientConfig } from './interfaces/ClientConfig'\n\nclass Client {\n  public products: Products\n  public taxons: Taxons\n  public countries: Countries\n  public cart: Cart\n  public checkout: Checkout\n  public authentication: Authentication\n  public account: Account\n  public order: Order\n  public pages: Pages\n  public digitalAssets: DigitalAssets\n  public menus: Menus\n  public wishlists: Wishlists\n\n  protected host: string\n  protected fetcher: Fetcher\n\n  constructor(customOptions: IClientConfig) {\n    const spreeHostEnvironmentValue: string | null = (globalThis.process && globalThis.process.env.SPREE_HOST) || null\n\n    const defaultOptions: Partial<IClientConfig> = {\n      host: spreeHostEnvironmentValue || 'http://localhost:3000/'\n    }\n\n    const options: IClientConfig = {\n      ...defaultOptions,\n      ...customOptions\n    }\n\n    const fetcherOptions: CreateFetcherConfig = { host: options.host }\n\n    this.fetcher = options.createFetcher(fetcherOptions)\n\n    this.addEndpoints()\n  }\n\n  protected addEndpoints(): void {\n    this.account = this.makeAccount()\n    this.authentication = this.makeAuthentication()\n    this.cart = this.makeCart()\n    this.checkout = this.makeCheckout()\n    this.countries = this.makeCountries()\n    this.order = this.makeOrder()\n    this.pages = this.makePages()\n    this.products = this.makeProducts()\n    this.taxons = this.makeTaxons()\n    this.digitalAssets = this.makeDigitalAssets()\n    this.menus = this.makeMenus()\n    this.wishlists = this.makeWishlists()\n  }\n\n  protected makeAccount(): Account {\n    return new Account({ fetcher: this.fetcher })\n  }\n\n  protected makeAuthentication(): Authentication {\n    return new Authentication({ fetcher: this.fetcher })\n  }\n\n  protected makeCart(): Cart {\n    return new Cart({ fetcher: this.fetcher })\n  }\n\n  protected makeCheckout(): Checkout {\n    return new Checkout({ fetcher: this.fetcher })\n  }\n\n  protected makeCountries(): Countries {\n    return new Countries({ fetcher: this.fetcher })\n  }\n\n  protected makeOrder(): Order {\n    return new Order({ fetcher: this.fetcher })\n  }\n\n  protected makePages(): Pages {\n    return new Pages({ fetcher: this.fetcher })\n  }\n\n  protected makeProducts(): Products {\n    return new Products({ fetcher: this.fetcher })\n  }\n\n  protected makeTaxons(): Taxons {\n    return new Taxons({ fetcher: this.fetcher })\n  }\n\n  protected makeDigitalAssets(): DigitalAssets {\n    return new DigitalAssets({ fetcher: this.fetcher })\n  }\n\n  protected makeMenus(): Menus {\n    return new Menus({ fetcher: this.fetcher })\n  }\n\n  protected makeWishlists(): Wishlists {\n    return new Wishlists({ fetcher: this.fetcher })\n  }\n}\n\nexport default Client\n","import {\n  BasicSpreeError,\n  ExpandedSpreeError,\n  MisconfigurationError,\n  NoResponseError,\n  SpreeError,\n  SpreeSDKError\n} from './errors'\nimport FetchError from './errors/FetchError'\nimport * as result from './helpers/result'\nimport type { Fetcher } from './interfaces/ClientConfig'\nimport type { ErrorType } from './interfaces/errors/ErrorType'\nimport type { FetchConfig, HttpMethod, ResponseParsing } from './interfaces/FetchConfig'\nimport type { JsonApiResponse } from './interfaces/JsonApi'\nimport type { ResultResponse } from './interfaces/ResultResponse'\nimport type { IToken } from './interfaces/Token'\n\nexport type EndpointOptions = {\n  fetcher: Fetcher\n}\n\nexport default class Http {\n  public fetcher: Fetcher\n\n  constructor({ fetcher }: EndpointOptions) {\n    this.fetcher = fetcher\n  }\n\n  protected async spreeResponse<ResponseType = JsonApiResponse>(\n    method: HttpMethod,\n    url: string,\n    tokens: IToken = {},\n    params: any = {},\n    responseParsing: ResponseParsing = 'automatic'\n  ): Promise<ResultResponse<ResponseType>> {\n    try {\n      const headers = this.spreeOrderHeaders(tokens)\n\n      const fetchOptions: FetchConfig = {\n        url,\n        params,\n        method,\n        headers,\n        responseParsing\n      }\n\n      const response = await this.fetcher.fetch(fetchOptions)\n\n      return result.makeSuccess(response.data)\n    } catch (error) {\n      return result.makeFail(this.processError(error))\n    }\n  }\n\n  /**\n   * The HTTP error code returned by Spree is not indicative of its response shape.\n   * This function determines the information provided by Spree and uses everything available.\n   */\n  protected classifySpreeError(error: FetchError): ErrorType {\n    const { error: errorSummary, errors } = error.data\n\n    if (typeof errorSummary === 'string') {\n      if (typeof errors === 'object') {\n        return 'full'\n      }\n      return 'basic'\n    }\n    return 'limited'\n  }\n\n  protected processError(error: Error): SpreeSDKError {\n    if (error instanceof FetchError) {\n      if (error.response) {\n        // Error from Spree outside HTTP 2xx codes\n        return this.processSpreeError(error)\n      }\n\n      if (error.request) {\n        // No response received from Spree\n        return new NoResponseError()\n      }\n\n      // Incorrect request setup\n      return new MisconfigurationError(error.message)\n    }\n\n    return new SpreeSDKError(error.message)\n  }\n\n  protected processSpreeError(error: FetchError): SpreeError {\n    const { error: errorSummary, errors } = error.data\n    const errorType = this.classifySpreeError(error)\n\n    if (errorType === 'full') {\n      return new ExpandedSpreeError(error.response, errorSummary, errors)\n    } else if (errorType === 'basic') {\n      return new BasicSpreeError(error.response, errorSummary)\n    } else {\n      return new SpreeError(error.response)\n    }\n  }\n\n  protected spreeOrderHeaders(tokens: IToken): { [headerName: string]: string } {\n    const header = {}\n\n    if (tokens.orderToken) {\n      header['X-Spree-Order-Token'] = tokens.orderToken\n    }\n\n    if (tokens.bearerToken) {\n      header['Authorization'] = `Bearer ${tokens.bearerToken}`\n    }\n\n    return header\n  }\n}\n","import squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\nimport Http from '../Http'\nimport type {\n  IAccountResult,\n  IAccountConfirmationResult,\n  IAccountConfirmation,\n  AccountAddressesResult,\n  AccountAddressResult,\n  AccountAddressParams,\n  AccountAddressResponse,\n  ForgotPasswordParams,\n  ResetPasswordParams,\n  IAccount,\n  AccountAddressesResponse,\n  AccountInfoOptions,\n  CreditCardsListOptions,\n  DefaultCreditCardOptions,\n  RemoveCreditCardOptions,\n  CompletedOrdersListOptions,\n  CompletedOrderOptions,\n  CreateOptions,\n  ConfirmOptions,\n  ForgotPasswordOptions,\n  ResetPasswordOptions,\n  UpdateOptions,\n  AddressesListOptions,\n  ShowAddressOptions,\n  CreateAddressOptions,\n  RemoveAddressOptions,\n  UpdateAddressOptions\n} from '../interfaces/Account'\nimport type { ICreditCard, ICreditCardResult, ICreditCards, ICreditCardsResult } from '../interfaces/CreditCard'\nimport type { NoContentResponse, NoContentResult } from '../interfaces/NoContent'\nimport type { IOrder, IOrderResult, IOrders, IOrdersResult } from '../interfaces/Order'\nimport type { IQuery } from '../interfaces/Query'\nimport type { IToken } from '../interfaces/Token'\nimport routes from '../routes'\n\nexport default class Account extends Http {\n  public async accountInfo(options: AccountInfoOptions): Promise<IAccountResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async accountInfo(token: IToken, params?: IQuery): Promise<IAccountResult>\n  public async accountInfo(...allArguments: any[]): Promise<IAccountResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IAccount>('get', routes.accountPath(), token, params)\n  }\n\n  public async creditCardsList(options: CreditCardsListOptions): Promise<ICreditCardsResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async creditCardsList(token: IToken, params?: IQuery): Promise<ICreditCardsResult>\n  public async creditCardsList(...allArguments: any[]): Promise<ICreditCardsResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<ICreditCards>('get', routes.accountCreditCardsPath(), token, params)\n  }\n\n  public async defaultCreditCard(options: DefaultCreditCardOptions): Promise<ICreditCardResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async defaultCreditCard(token: IToken, params?: IQuery): Promise<ICreditCardResult>\n  public async defaultCreditCard(...allArguments: any[]): Promise<ICreditCardResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<ICreditCard>('get', routes.accountDefaultCreditCardPath(), token, params)\n  }\n\n  public async removeCreditCard(options: RemoveCreditCardOptions): Promise<NoContentResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async removeCreditCard(token: IToken, id: string, params?: IQuery): Promise<NoContentResult>\n  public async removeCreditCard(...allArguments: any[]): Promise<NoContentResult> {\n    const [tokenOrOptions, positionalId, positionalParams = {}] = allArguments\n    const { id, token, params } = squashAndPreparePositionalArguments(\n      [{ id: positionalId }, tokenOrOptions, positionalParams],\n      ['id']\n    )\n\n    return await this.spreeResponse<NoContentResponse>('delete', routes.accountCreditCardRemovePath(id), token, params)\n  }\n\n  public async completedOrdersList(options: CompletedOrdersListOptions): Promise<IOrdersResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async completedOrdersList(token: IToken, params?: IQuery): Promise<IOrdersResult>\n  public async completedOrdersList(...allArguments: any[]): Promise<IOrdersResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrders>('get', routes.accountCompletedOrdersPath(), token, params)\n  }\n\n  public async completedOrder(options: CompletedOrderOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async completedOrder(token: IToken, orderNumber: string, params?: IQuery): Promise<IOrderResult>\n  public async completedOrder(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalOrderNumber, positionalParams = {}] = allArguments\n    const { order_number, token, params } = squashAndPreparePositionalArguments(\n      [{ order_number: positionalOrderNumber }, tokenOrOptions, positionalParams],\n      ['order_number']\n    )\n\n    return await this.spreeResponse<IOrder>('get', routes.accountCompletedOrderPath(order_number), token, params)\n  }\n\n  public async create(options: CreateOptions): Promise<IAccountResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async create(params: IQuery): Promise<IAccountResult>\n  public async create(...allArguments: any[]): Promise<IAccountResult> {\n    const [paramsOrOptions = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([paramsOrOptions], [])\n\n    return await this.spreeResponse<IAccount>('post', routes.accountPath(), token, params)\n  }\n\n  public async confirm(option: ConfirmOptions): Promise<IAccountConfirmationResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async confirm(confirmationToken: string): Promise<IAccountConfirmationResult>\n  public async confirm(...allArguments: any[]): Promise<IAccountConfirmationResult> {\n    const [confirmationTokenOrOptions] = allArguments\n    const { confirmation_token, token, params } = squashAndPreparePositionalArguments(\n      [\n        typeof confirmationTokenOrOptions === 'object'\n          ? confirmationTokenOrOptions\n          : { confirmation_token: confirmationTokenOrOptions }\n      ],\n      ['confirmation_token']\n    )\n\n    return await this.spreeResponse<IAccountConfirmation>(\n      'get',\n      routes.accountConfirmPath(confirmation_token),\n      token,\n      params\n    )\n  }\n\n  public async forgotPassword(options: ForgotPasswordOptions): Promise<NoContentResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async forgotPassword(params: ForgotPasswordParams): Promise<NoContentResult>\n  public async forgotPassword(...allArguments: any[]): Promise<NoContentResult> {\n    const [paramsOrOptions] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([paramsOrOptions], [])\n\n    return await this.spreeResponse<NoContentResponse>('post', routes.forgotPasswordPath(), token, params)\n  }\n\n  public async resetPassword(options: ResetPasswordOptions): Promise<NoContentResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async resetPassword(resetPasswordToken: string, params: ResetPasswordParams): Promise<NoContentResult>\n  public async resetPassword(...allArguments: any[]): Promise<NoContentResult> {\n    const [resetPasswordTokenOrOptions, positionalParams] = allArguments\n    const { reset_password_token, token, params } = squashAndPreparePositionalArguments(\n      [\n        typeof resetPasswordTokenOrOptions === 'object'\n          ? resetPasswordTokenOrOptions\n          : { resetPasswordToken: resetPasswordTokenOrOptions },\n        positionalParams\n      ],\n      ['reset_password_token']\n    )\n\n    return await this.spreeResponse<NoContentResponse>(\n      'patch',\n      routes.resetPasswordPath(reset_password_token),\n      token,\n      params\n    )\n  }\n\n  public async update(options: UpdateOptions): Promise<IAccountResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async update(token: IToken, params: IQuery): Promise<IAccountResult>\n  public async update(...allArguments: any[]): Promise<IAccountResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IAccount>('patch', routes.accountPath(), token, params)\n  }\n\n  public async addressesList(options: AddressesListOptions): Promise<AccountAddressesResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async addressesList(token: IToken): Promise<AccountAddressesResult>\n  public async addressesList(...allArguments: any[]): Promise<AccountAddressesResult> {\n    const [tokenOrOptions] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions], [])\n\n    return await this.spreeResponse<AccountAddressesResponse>('get', routes.accountAddressesPath(), token, params)\n  }\n\n  public async showAddress(options: ShowAddressOptions): Promise<AccountAddressResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async showAddress(token: IToken, addressId: string, params?: IQuery): Promise<AccountAddressResult>\n  public async showAddress(...allArguments: any[]): Promise<AccountAddressResult> {\n    const [tokenOrOptions, positionalId, positionalParams = {}] = allArguments\n    const { id, token, params } = squashAndPreparePositionalArguments(\n      [{ id: positionalId }, tokenOrOptions, positionalParams],\n      ['id']\n    )\n\n    return await this.spreeResponse<AccountAddressResponse>('get', routes.accountAddressPath(id), token, params)\n  }\n\n  public async createAddress(options: CreateAddressOptions): Promise<AccountAddressResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async createAddress(token: IToken, params: AccountAddressParams): Promise<AccountAddressResult>\n  public async createAddress(...allArguments: any[]): Promise<AccountAddressResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<AccountAddressResponse>('post', routes.accountAddressesPath(), token, params)\n  }\n\n  public async removeAddress(options: RemoveAddressOptions): Promise<NoContentResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async removeAddress(token: IToken, id: string, params?: IQuery): Promise<NoContentResult>\n  public async removeAddress(...allArguments: any[]): Promise<NoContentResult> {\n    const [tokenOrOptions, positionalId, positionalParams = {}] = allArguments\n    const { id, token, params } = squashAndPreparePositionalArguments(\n      [{ id: positionalId }, tokenOrOptions, positionalParams],\n      ['id']\n    )\n\n    return await this.spreeResponse<NoContentResponse>('delete', routes.accountAddressRemovePath(id), token, params)\n  }\n\n  public async updateAddress(options: UpdateAddressOptions): Promise<AccountAddressResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async updateAddress(\n    token: IToken,\n    addressId: string,\n    params: AccountAddressParams\n  ): Promise<AccountAddressResult>\n  public async updateAddress(...allArguments: any[]): Promise<AccountAddressResult> {\n    const [tokenOrOptions, positionalId, positionalParams] = allArguments\n    const { id, token, params } = squashAndPreparePositionalArguments(\n      [{ id: positionalId }, tokenOrOptions, positionalParams],\n      ['id']\n    )\n\n    return await this.spreeResponse<AccountAddressResponse>('patch', routes.accountAddressPath(id), token, params)\n  }\n}\n","import { authParams, refreshParams, revokeParams } from '../helpers/auth'\nimport Http from '../Http'\nimport type {\n  AuthTokenAttr,\n  GetTokenOptions,\n  RefreshTokenAttr,\n  RefreshTokenOptions,\n  RevokeTokenAttr,\n  RevokeTokenOptions\n} from '../interfaces/Authentication'\nimport type { IOAuthToken, IOAuthTokenResult } from '../interfaces/Token'\nimport type { EmptyObjectResponse, EmptyObjectResult } from '../interfaces/EmptyObject'\nimport routes from '../routes'\nimport squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\n\nexport default class Authentication extends Http {\n  public async getToken(options: GetTokenOptions): Promise<IOAuthTokenResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async getToken(params: AuthTokenAttr): Promise<IOAuthTokenResult>\n  public async getToken(...allArguments: any[]): Promise<IOAuthTokenResult> {\n    const [paramsOrOptions] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([paramsOrOptions], [])\n\n    return await this.spreeResponse<IOAuthToken>(\n      'post',\n      routes.oauthTokenPath(),\n      token,\n      authParams(params as AuthTokenAttr)\n    )\n  }\n\n  public async refreshToken(options: RefreshTokenOptions): Promise<IOAuthTokenResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async refreshToken(params: RefreshTokenAttr): Promise<IOAuthTokenResult>\n  public async refreshToken(...allArguments: any[]): Promise<IOAuthTokenResult> {\n    const [paramsOrOptions] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([paramsOrOptions], [])\n\n    return await this.spreeResponse<IOAuthToken>(\n      'post',\n      routes.oauthTokenPath(),\n      token,\n      refreshParams(params as RefreshTokenAttr)\n    )\n  }\n\n  public async revokeToken(optons: RevokeTokenOptions): Promise<EmptyObjectResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async revokeToken(params: RevokeTokenAttr): Promise<EmptyObjectResult>\n  public async revokeToken(...allArguments: any[]): Promise<EmptyObjectResult> {\n    const [paramsOrOptions] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([paramsOrOptions], [])\n\n    return await this.spreeResponse<EmptyObjectResponse>(\n      'post',\n      routes.oauthRevokePath(),\n      token,\n      revokeParams(params as RevokeTokenAttr)\n    )\n  }\n}\n","import Http from '../Http'\nimport type {\n  AddItem,\n  CouponCode,\n  EstimateShippingMethods,\n  SetQuantity,\n  AssociateCart,\n  ChangeCurrency,\n  EstimateShippingRates\n} from '../interfaces/endpoints/CartClass'\nimport type {\n  EstimatedShippingRates,\n  EstimatedShippingRatesResult,\n  IEstimatedShippingMethods,\n  IEstimatedShippingMethodsResult\n} from '../interfaces/EstimatedShippingMethod'\nimport type { IOrder, IOrderResult } from '../interfaces/Order'\nimport type { NoContentResponse, NoContentResult } from '../interfaces/NoContent'\nimport type { IQuery } from '../interfaces/Query'\nimport type { IToken } from '../interfaces/Token'\nimport routes from '../routes'\nimport squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\nimport type {\n  AddItemOptions,\n  ApplyCouponCodeOptions,\n  AssociateGuestCartOptions,\n  ChangeCurrencyOptions,\n  CreateOptions,\n  EmptyCartOptions,\n  EstimateShippingRatesOptions,\n  RemoveAllCouponsOptions,\n  RemoveCouponCodeOptions,\n  RemoveItemOptions,\n  RemoveOptions,\n  SetQuantityOptions,\n  ShowOptions\n} from '../interfaces/Cart'\n\nexport default class Cart extends Http {\n  public async show(options: ShowOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async show(token: IToken, params?: IQuery): Promise<IOrderResult>\n  public async show(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('get', routes.cartPath(), token, params)\n  }\n\n  public async create(options?: CreateOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async create(token?: IToken, params?: IQuery): Promise<IOrderResult>\n  public async create(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions = {}, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('post', routes.cartPath(), token, params)\n  }\n\n  public async addItem(options: AddItemOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async addItem(token: IToken, params: AddItem): Promise<IOrderResult>\n  public async addItem(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('post', routes.cartAddItemPath(), token, params)\n  }\n\n  public async removeItem(options: RemoveItemOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async removeItem(token: IToken, id: string, params?: IQuery): Promise<IOrderResult>\n  public async removeItem(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalId, positionalParams = {}] = allArguments\n    const { id, token, params } = squashAndPreparePositionalArguments(\n      [{ id: positionalId }, tokenOrOptions, positionalParams],\n      ['id']\n    )\n\n    return await this.spreeResponse<IOrder>('delete', routes.cartRemoveItemPath(id), token, params)\n  }\n\n  public async emptyCart(options: EmptyCartOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async emptyCart(token: IToken, params?: IQuery): Promise<IOrderResult>\n  public async emptyCart(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('patch', routes.cartEmptyPath(), token, params)\n  }\n\n  public async remove(options: RemoveOptions): Promise<NoContentResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async remove(token: IToken): Promise<NoContentResult>\n  public async remove(...allArguments: any[]): Promise<NoContentResult> {\n    const [tokenOrOptions] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions], [])\n\n    return await this.spreeResponse<NoContentResponse>('delete', routes.cartPath(), token, params)\n  }\n\n  public async setQuantity(options: SetQuantityOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async setQuantity(token: IToken, params: SetQuantity): Promise<IOrderResult>\n  public async setQuantity(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('patch', routes.cartSetItemQuantity(), token, params)\n  }\n\n  public async applyCouponCode(options: ApplyCouponCodeOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async applyCouponCode(token: IToken, params: CouponCode): Promise<IOrderResult>\n  public async applyCouponCode(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('patch', routes.cartApplyCodePath(), token, params)\n  }\n\n  public async removeCouponCode(options: RemoveCouponCodeOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async removeCouponCode(token: IToken, code: string, params?: IQuery): Promise<IOrderResult>\n  public async removeCouponCode(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalCode = null, positionalParams = {}] = allArguments\n    const { code, token, params } = squashAndPreparePositionalArguments(\n      [{ code: positionalCode }, tokenOrOptions, positionalParams],\n      ['code']\n    )\n\n    let route: string\n\n    if (code) {\n      route = routes.cartRemoveCodePath(code)\n    } else {\n      route = routes.cartRemoveAllCoupons()\n    }\n\n    return await this.spreeResponse<IOrder>('delete', route, token, params)\n  }\n\n  public async removeAllCoupons(options: RemoveAllCouponsOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async removeAllCoupons(token: IToken, params: IQuery): Promise<IOrderResult>\n  public async removeAllCoupons(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('delete', routes.cartRemoveAllCoupons(), token, params)\n  }\n\n  /**\n   * @deprecated Use {@link estimateShippingRates} instead.\n   */\n  public async estimateShippingMethods(\n    token: IToken,\n    params: EstimateShippingMethods\n  ): Promise<IEstimatedShippingMethodsResult> {\n    return await this.spreeResponse<IEstimatedShippingMethods>(\n      'get',\n      routes.cartEstimateShippingMethodsPath(),\n      token,\n      params\n    )\n  }\n\n  public async estimateShippingRates(options: EstimateShippingRatesOptions): Promise<EstimatedShippingRatesResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async estimateShippingRates(\n    token: IToken,\n    params: EstimateShippingRates\n  ): Promise<EstimatedShippingRatesResult>\n  public async estimateShippingRates(...allArguments: any[]): Promise<EstimatedShippingRatesResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<EstimatedShippingRates>(\n      'get',\n      routes.cartEstimateShippingRatesPath(),\n      token,\n      params\n    )\n  }\n\n  public async associateGuestCart(options: AssociateGuestCartOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async associateGuestCart(token: IToken, params: AssociateCart): Promise<IOrderResult>\n  public async associateGuestCart(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('patch', routes.cartAssociatePath(), token, params)\n  }\n\n  public async changeCurrency(options: ChangeCurrencyOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async changeCurrency(token: IToken, params: ChangeCurrency): Promise<IOrderResult>\n  public async changeCurrency(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('patch', routes.cartChangeCurrencyPath(), token, params)\n  }\n}\n","import squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\nimport Http from '../Http'\nimport type {\n  CreateStripeSessionOptions,\n  OrderUpdate,\n  AddStoreCredit,\n  AddPayment,\n  NestedAttributes,\n  SelectShippingMethod,\n  AddPaymentOptions,\n  SelectShippingMethodOptions,\n  ShippingRatesOptions,\n  PaymentMethodsOptions,\n  RemoveStoreCreditsOptions,\n  AddStoreCreditOptions,\n  CompleteOptions,\n  AdvanceOptions,\n  OrderUpdateOptions,\n  OrderNextOptions\n} from '../interfaces/Checkout'\nimport type { IOrder, IOrderResult } from '../interfaces/Order'\nimport type { IPaymentMethods, IPaymentMethodsResult } from '../interfaces/PaymentMethod'\nimport type { IQuery } from '../interfaces/Query'\nimport type {\n  IShippingMethods,\n  IShippingMethodsResult,\n  ShippingRates,\n  ShippingRatesResult\n} from '../interfaces/ShippingMethod'\nimport {\n  StripeCheckoutSessionSummary,\n  StripeCheckoutSessionSummaryResult\n} from '../interfaces/StripeCheckoutSessionSummary'\nimport type { IToken } from '../interfaces/Token'\nimport routes from '../routes'\n\nexport default class Checkout extends Http {\n  public async orderNext(options: OrderNextOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async orderNext(token: IToken, params?: IQuery): Promise<IOrderResult>\n  public async orderNext(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('patch', routes.checkoutNextPath(), token, params)\n  }\n\n  public async orderUpdate(options: OrderUpdateOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async orderUpdate(token: IToken, params: OrderUpdate | NestedAttributes): Promise<IOrderResult>\n  public async orderUpdate(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('patch', routes.checkoutPath(), token, params)\n  }\n\n  public async advance(options: AdvanceOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async advance(token: IToken, params?: IQuery): Promise<IOrderResult>\n  public async advance(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('patch', routes.checkoutAdvancePath(), token, params)\n  }\n\n  public async complete(options: CompleteOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async complete(token: IToken, params?: IQuery): Promise<IOrderResult>\n  public async complete(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('patch', routes.checkoutCompletePath(), token, params)\n  }\n\n  public async addStoreCredits(options: AddStoreCreditOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async addStoreCredits(token: IToken, params: AddStoreCredit): Promise<IOrderResult>\n  public async addStoreCredits(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('post', routes.checkoutAddStoreCreditsPath(), token, params)\n  }\n\n  public async removeStoreCredits(options: RemoveStoreCreditsOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async removeStoreCredits(token: IToken, params?: IQuery): Promise<IOrderResult>\n  public async removeStoreCredits(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('post', routes.checkoutRemoveStoreCreditsPath(), token, params)\n  }\n\n  public async paymentMethods(options: PaymentMethodsOptions): Promise<IPaymentMethodsResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async paymentMethods(token: IToken): Promise<IPaymentMethodsResult>\n  public async paymentMethods(...allArguments: any[]): Promise<IPaymentMethodsResult> {\n    const [tokenOrOptions] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions], [])\n\n    return await this.spreeResponse<IPaymentMethods>('get', routes.checkoutPaymentMethodsPath(), token, params)\n  }\n\n  /**\n   * @deprecated Use {@link shippingRates} instead.\n   */\n  public async shippingMethods(token: IToken, params: IQuery = {}): Promise<IShippingMethodsResult> {\n    return await this.spreeResponse<IShippingMethods>('get', routes.checkoutShippingMethodsPath(), token, params)\n  }\n\n  public async shippingRates(options: ShippingRatesOptions): Promise<ShippingRatesResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async shippingRates(token: IToken, params?: IQuery): Promise<ShippingRatesResult>\n  public async shippingRates(...allArguments: any[]): Promise<ShippingRatesResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<ShippingRates>('get', routes.checkoutShippingRatesPath(), token, params)\n  }\n\n  public async selectShippingMethod(options: SelectShippingMethodOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async selectShippingMethod(token: IToken, params: SelectShippingMethod): Promise<IOrderResult>\n  public async selectShippingMethod(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('patch', routes.checkoutSelectShippingMethodPath(), token, params)\n  }\n\n  public async addPayment(options: AddPaymentOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async addPayment(token: IToken, addPaymentParams: AddPayment): Promise<IOrderResult>\n  public async addPayment(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IOrder>('post', routes.checkoutAddPaymentPath(), token, params)\n  }\n\n  public async createStripeSession(options: CreateStripeSessionOptions): Promise<StripeCheckoutSessionSummaryResult> {\n    const { token, params } = squashAndPreparePositionalArguments([options], [])\n\n    return await this.spreeResponse<StripeCheckoutSessionSummary>(\n      'patch',\n      routes.checkoutCreateStripeSessionPath(),\n      token,\n      params\n    )\n  }\n}\n","import squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\nimport Http from '../Http'\nimport type {\n  ICountries,\n  ICountriesResult,\n  ICountry,\n  ICountryResult,\n  DefaultOptions,\n  ListOptions,\n  ShowOptions\n} from '../interfaces/Country'\nimport type { IQuery } from '../interfaces/Query'\nimport routes from '../routes'\n\nexport default class Countries extends Http {\n  public async list(options?: ListOptions): Promise<ICountriesResult> {\n    const { token, params } = squashAndPreparePositionalArguments([options || {}], [])\n\n    return await this.spreeResponse<ICountries>('get', routes.countriesPath(), token, params)\n  }\n\n  public async show(options: ShowOptions): Promise<ICountryResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async show(iso: string, params: IQuery): Promise<ICountryResult>\n  public async show(...allArguments: any[]): Promise<ICountryResult> {\n    const [isoOrOptions, positionalParams = {}] = allArguments\n    const { iso, token, params } = squashAndPreparePositionalArguments(\n      [typeof isoOrOptions === 'object' ? isoOrOptions : { iso: isoOrOptions }, positionalParams],\n      ['iso']\n    )\n\n    return await this.spreeResponse<ICountry>('get', routes.countryPath(iso), token, params)\n  }\n\n  public async default(options?: DefaultOptions): Promise<ICountryResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async default(params: IQuery): Promise<ICountryResult>\n  public async default(...allArguments: any[]): Promise<ICountryResult> {\n    const [paramsOrOptions = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([paramsOrOptions], [])\n\n    return await this.spreeResponse<ICountry>('get', routes.defaultCountryPath(), token, params)\n  }\n}\n","import Http from '../Http'\nimport routes from '../routes'\nimport type { IQuery } from '../interfaces/Query'\nimport type { IToken } from '../interfaces/Token'\nimport type { DigitalAsset, DigitalAssetResult, DownloadOptions } from '../interfaces/DigitalAsset'\nimport squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\n\nexport default class DigitalAssets extends Http {\n  public async download(options: DownloadOptions): Promise<DigitalAssetResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async download(token: IToken, assetToken: string, params?: IQuery): Promise<DigitalAssetResult>\n  public async download(...allArguments: any[]): Promise<DigitalAssetResult> {\n    const [tokenOrOptions, positionalAssetToken, positionalParams = {}] = allArguments\n    const { asset_token, token, params } = squashAndPreparePositionalArguments(\n      [tokenOrOptions, { asset_token: positionalAssetToken }, positionalParams],\n      ['asset_token']\n    )\n\n    return await this.spreeResponse<DigitalAsset>(\n      'get',\n      routes.digitalAssetsDownloadPath(asset_token),\n      token,\n      params,\n      'stream'\n    )\n  }\n}\n","import squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\nimport Http from '../Http'\nimport type {\n  Menu,\n  Menus as MenusResponse,\n  MenuResult,\n  MenusList,\n  MenusResult,\n  ListOptions,\n  ShowOptions\n} from '../interfaces/Menu'\nimport type { IQuery } from '../interfaces/Query'\nimport routes from '../routes'\n\nexport default class Menus extends Http {\n  public async list(options?: ListOptions): Promise<MenusResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async list(params?: MenusList): Promise<MenusResult>\n  public async list(...allArguments: any[]): Promise<MenusResult> {\n    const [paramsOrOptions = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([paramsOrOptions], [])\n\n    return await this.spreeResponse<MenusResponse>('get', routes.menusPath(), token, params)\n  }\n\n  public async show(options: ShowOptions): Promise<MenuResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async show(id: string, params?: IQuery): Promise<MenuResult>\n  public async show(...allArguments: any[]): Promise<MenuResult> {\n    const [idOrOptions, positionalParams = {}] = allArguments\n    const { id, token, params } = squashAndPreparePositionalArguments(\n      [typeof idOrOptions === 'object' ? idOrOptions : { id: idOrOptions }, positionalParams],\n      ['id']\n    )\n\n    return await this.spreeResponse<Menu>('get', routes.menuPath(id), token, params)\n  }\n}\n","import squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\nimport Http from '../Http'\nimport type { IOrder, IOrderResult, StatusOptions } from '../interfaces/Order'\nimport type { IQuery } from '../interfaces/Query'\nimport type { IToken } from '../interfaces/Token'\nimport routes from '../routes'\n\nexport default class Order extends Http {\n  public async status(options: StatusOptions): Promise<IOrderResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async status(token: IToken, orderNumber: string, params?: IQuery): Promise<IOrderResult>\n  public async status(...allArguments: any[]): Promise<IOrderResult> {\n    const [tokenOrOptions, positionalOrderNumber, positionalParams = {}] = allArguments\n    const { order_number, token, params } = squashAndPreparePositionalArguments(\n      [tokenOrOptions, { order_number: positionalOrderNumber }, positionalParams],\n      ['order_number']\n    )\n\n    return await this.spreeResponse<IOrder>('get', routes.orderStatusPath(order_number), token, params)\n  }\n}\n","import squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\nimport Http from '../Http'\nimport type { IPage, IPageResult, IPages, IPagesResult, ListOptions, ShowOptions } from '../interfaces/Page'\nimport type { IQuery } from '../interfaces/Query'\nimport routes from '../routes'\n\nexport default class Pages extends Http {\n  public async list(options?: ListOptions): Promise<IPagesResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async list(params?: IQuery): Promise<IPagesResult>\n  public async list(...allArguments: any[]): Promise<IPagesResult> {\n    const [paramsOrOptions = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([paramsOrOptions], [])\n\n    return await this.spreeResponse<IPages>('get', routes.pagesPath(), token, params)\n  }\n\n  public async show(options: ShowOptions): Promise<IPageResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async show(id: string, params?: IQuery): Promise<IPageResult>\n  public async show(...allArguments: any[]): Promise<IPageResult> {\n    const [idOrOptions, positionalParams = {}] = allArguments\n    const { id, token, params } = squashAndPreparePositionalArguments(\n      [typeof idOrOptions === 'object' ? idOrOptions : { id: idOrOptions }, positionalParams],\n      ['id']\n    )\n\n    return await this.spreeResponse<IPage>('get', routes.pagePath(id), token, params)\n  }\n}\n","import squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\nimport Http from '../Http'\nimport type {\n  IProduct,\n  IProductResult,\n  IProducts,\n  IProductsResult,\n  ListOptions,\n  ShowOptions\n} from '../interfaces/Product'\nimport type { IProductsQuery } from '../interfaces/Query'\nimport type { IToken } from '../interfaces/Token'\nimport routes from '../routes'\n\nexport default class Products extends Http {\n  public async list(options: ListOptions): Promise<IProductsResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async list(token: IToken, params: IProductsQuery): Promise<IProductsResult>\n  public async list(...allArguments: any[]): Promise<IProductsResult> {\n    const [tokenOrOptions = {}, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<IProducts>('get', routes.productsPath(), token, params)\n  }\n\n  public async show(options: ShowOptions): Promise<IProductResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async show(id: string, token: IToken, params: IProductsQuery): Promise<IProductResult>\n  public async show(...allArguments: any[]): Promise<IProductResult> {\n    const [positionalId, positionalToken = {}, positionalParams = {}] = allArguments\n    const { id, token, params } = squashAndPreparePositionalArguments(\n      [{ id: positionalId }, positionalToken, positionalParams],\n      ['id']\n    )\n\n    return await this.spreeResponse<IProduct>('get', routes.productPath(id), token, params)\n  }\n}\n","import squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\nimport Http from '../Http'\nimport type { IQuery } from '../interfaces/Query'\nimport type { ITaxon, ITaxonResult, ITaxons, ITaxonsResult, ListOptions, ShowOptions } from '../interfaces/Taxon'\nimport routes from '../routes'\n\nexport default class Taxons extends Http {\n  public async list(options?: ListOptions): Promise<ITaxonsResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async list(params?: IQuery): Promise<ITaxonsResult>\n  public async list(...allArguments: any[]): Promise<ITaxonsResult> {\n    const [paramsOrOptions = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([paramsOrOptions], [])\n\n    return await this.spreeResponse<ITaxons>('get', routes.taxonsPath(), token, params)\n  }\n\n  public async show(options: ShowOptions): Promise<ITaxonResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async show(id: string, params?: IQuery): Promise<ITaxonResult>\n  public async show(...allArguments: any[]): Promise<ITaxonResult> {\n    const [idOrOptions, positionalParams = {}] = allArguments\n    const { id, token, params } = squashAndPreparePositionalArguments(\n      [typeof idOrOptions === 'object' ? idOrOptions : { id: idOrOptions }, positionalParams],\n      ['id']\n    )\n\n    return await this.spreeResponse<ITaxon>('get', routes.taxonPath(id), token, params)\n  }\n}\n","import squashAndPreparePositionalArguments from '../helpers/squashAndPreparePositionalArguments'\nimport Http from '../Http'\nimport type { NoContentResponse, NoContentResult } from '../interfaces/NoContent'\nimport type { IToken } from '../interfaces/Token'\nimport type {\n  WishedItem,\n  WishedItemResult,\n  WishlistsAddWishedItem,\n  WishlistsUpdateWishedItem,\n  AddWishedItemOptions,\n  UpdateWishedItemOptions,\n  RemoveWishedItemOptions\n} from '../interfaces/WishedItem'\nimport type {\n  WishlistsList,\n  WishlistsResult,\n  Wishlists as WishlistsResponse,\n  Wishlist as WishlistResponse,\n  WishlistsShow,\n  WishlistResult,\n  WishlistsDefault,\n  WishlistsCreate,\n  WishlistsUpdate,\n  ListOptions,\n  ShowOptions,\n  DefaultOptions,\n  CreateOptions,\n  UpdateOptions,\n  RemoveOptions\n} from '../interfaces/Wishlist'\nimport routes from '../routes'\n\nexport default class Wishlists extends Http {\n  public async list(options: ListOptions): Promise<WishlistsResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async list(token: IToken, params?: WishlistsList): Promise<WishlistsResult>\n  public async list(...allArguments: any[]): Promise<WishlistsResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<WishlistsResponse>('get', routes.wishlistsPath(), token, params)\n  }\n\n  public async show(options: ShowOptions): Promise<WishlistResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async show(token: IToken, wishlistToken: string, params?: WishlistsShow): Promise<WishlistResult>\n  public async show(...allArguments: any[]): Promise<WishlistResult> {\n    const [tokenOrOptions, positionalWishlistToken, positionalParams = {}] = allArguments\n    const { wishlist_token, token, params } = squashAndPreparePositionalArguments(\n      [tokenOrOptions, { wishlist_token: positionalWishlistToken }, positionalParams],\n      ['wishlist_token']\n    )\n\n    return await this.spreeResponse<WishlistResponse>('get', routes.wishlistPath(wishlist_token), token, params)\n  }\n\n  public async default(options: DefaultOptions): Promise<WishlistResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async default(token: IToken, params?: WishlistsDefault): Promise<WishlistResult>\n  public async default(...allArguments: any[]): Promise<WishlistResult> {\n    const [tokenOrOptions, positionalParams = {}] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<WishlistResponse>('get', routes.defaultWishlistPath(), token, params)\n  }\n\n  public async create(options: CreateOptions): Promise<WishlistResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async create(token: IToken, params: WishlistsCreate): Promise<WishlistResult>\n  public async create(...allArguments: any[]): Promise<WishlistResult> {\n    const [tokenOrOptions, positionalParams] = allArguments\n    const { token, params } = squashAndPreparePositionalArguments([tokenOrOptions, positionalParams], [])\n\n    return await this.spreeResponse<WishlistResponse>('post', routes.wishlistsPath(), token, params)\n  }\n\n  public async update(options: UpdateOptions): Promise<WishlistResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async update(token: IToken, wishlistToken: string, params: WishlistsUpdate): Promise<WishlistResult>\n  public async update(...allArguments: any[]): Promise<WishlistResult> {\n    const [tokenOrOptions, positionalWishlistToken, positionalParams] = allArguments\n    const { wishlist_token, token, params } = squashAndPreparePositionalArguments(\n      [tokenOrOptions, { wishlist_token: positionalWishlistToken }, positionalParams],\n      ['wishlist_token']\n    )\n\n    return await this.spreeResponse<WishlistResponse>('patch', routes.wishlistPath(wishlist_token), token, params)\n  }\n\n  public async remove(options: RemoveOptions): Promise<NoContentResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async remove(token: IToken, wishlistToken: string): Promise<NoContentResult>\n  public async remove(...allArguments: any[]): Promise<NoContentResult> {\n    const [tokenOrOptions, positionalWishlistToken] = allArguments\n    const { wishlist_token, token, params } = squashAndPreparePositionalArguments(\n      [tokenOrOptions, { wishlist_token: positionalWishlistToken }],\n      ['wishlist_token']\n    )\n\n    return await this.spreeResponse<NoContentResponse>('delete', routes.wishlistPath(wishlist_token), token, params)\n  }\n\n  public async addWishedItem(options: AddWishedItemOptions): Promise<WishedItemResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async addWishedItem(\n    token: IToken,\n    wishlistToken: string,\n    params: WishlistsAddWishedItem\n  ): Promise<WishedItemResult>\n  public async addWishedItem(...allArguments: any[]): Promise<WishedItemResult> {\n    const [tokenOrOptions, positionalWishlistToken, positionalParams] = allArguments\n    const { wishlist_token, token, params } = squashAndPreparePositionalArguments(\n      [tokenOrOptions, { wishlist_token: positionalWishlistToken }, positionalParams],\n      ['wishlist_token']\n    )\n\n    return await this.spreeResponse<WishedItem>(\n      'post',\n      routes.wishlistsAddWishedItemPath(wishlist_token),\n      token,\n      params\n    )\n  }\n\n  public async updateWishedItem(options: UpdateWishedItemOptions): Promise<WishedItemResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async updateWishedItem(\n    token: IToken,\n    wishlistToken: string,\n    id: string,\n    params: WishlistsUpdateWishedItem\n  ): Promise<WishedItemResult>\n  public async updateWishedItem(...allArguments: any[]): Promise<WishedItemResult> {\n    const [tokenOrOptions, positionalWishlistToken, positionalId, positionalParams] = allArguments\n    const { wishlist_token, id, token, params } = squashAndPreparePositionalArguments(\n      [tokenOrOptions, { wishlist_token: positionalWishlistToken }, { id: positionalId }, positionalParams],\n      ['wishlist_token', 'id']\n    )\n\n    return await this.spreeResponse<WishedItem>(\n      'patch',\n      routes.wishlistsUpdateWishedItemQuantityPath(wishlist_token, id),\n      token,\n      params\n    )\n  }\n\n  public async removeWishedItem(options: RemoveWishedItemOptions): Promise<WishedItemResult>\n  /**\n   * @deprecated Use the combined options signature instead.\n   */\n  public async removeWishedItem(token: IToken, wishlistToken: string, id: string): Promise<WishedItemResult>\n  public async removeWishedItem(...allArguments: any[]): Promise<WishedItemResult> {\n    const [tokenOrOptions, positionalWishlistToken, positionalId] = allArguments\n    const { wishlist_token, id, token, params } = squashAndPreparePositionalArguments(\n      [tokenOrOptions, { wishlist_token: positionalWishlistToken }, { id: positionalId }],\n      ['wishlist_token', 'id']\n    )\n\n    return await this.spreeResponse<WishedItem>(\n      'delete',\n      routes.wishlistsRemoveWishedItemPath(wishlist_token, id),\n      token,\n      params\n    )\n  }\n}\n","import Account from './Account'\nimport Authentication from './Authentication'\nimport Cart from './Cart'\nimport Checkout from './Checkout'\nimport Countries from './Countries'\nimport Order from './Order'\nimport Pages from './Pages'\nimport Products from './Products'\nimport Taxons from './Taxons'\nimport DigitalAssets from './DigitalAssets'\nimport Menus from './Menus'\nimport Wishlists from './Wishlists'\n\nexport {\n  Account,\n  Authentication,\n  Cart,\n  Checkout,\n  Countries,\n  Order,\n  Products,\n  Pages,\n  Taxons,\n  DigitalAssets,\n  Menus,\n  Wishlists\n}\n","import type { RawFetchResponse } from '../interfaces/RawFetchResponse'\nimport SpreeError from './SpreeError'\n\nclass BasicSpreeError extends SpreeError {\n  public summary: string\n\n  constructor(serverResponse: RawFetchResponse, errorsSummary: string) {\n    super(serverResponse)\n    Object.setPrototypeOf(this, BasicSpreeError.prototype)\n    this.name = 'BasicSpreeError'\n    this.summary = errorsSummary\n  }\n}\n\nexport default BasicSpreeError\n","import SpreeSDKError from './SpreeSDKError'\n\nexport default class CastError extends SpreeSDKError {\n  constructor(message: string) {\n    super(message)\n    Object.setPrototypeOf(this, CastError.prototype)\n    this.name = 'CastError'\n  }\n}\n","import SpreeSDKError from './SpreeSDKError'\n\nexport default class DeserializeError extends SpreeSDKError {\n  constructor(message: string) {\n    super(message)\n    Object.setPrototypeOf(this, DeserializeError.prototype)\n    this.name = 'DeserializeError'\n  }\n}\n","import SpreeSDKError from './SpreeSDKError'\n\nexport default class DocumentRelationshipError extends SpreeSDKError {\n  constructor(message: string) {\n    super(message)\n    Object.setPrototypeOf(this, DocumentRelationshipError.prototype)\n    this.name = 'DocumentRelationshipError'\n  }\n}\n","import { Errors, FieldErrors } from '../interfaces/errors/Errors'\nimport type { RawFetchResponse } from '../interfaces/RawFetchResponse'\nimport BasicSpreeError from './BasicSpreeError'\n\nexport default class ExpandedSpreeError extends BasicSpreeError {\n  public errors: Errors\n\n  constructor(serverResponse: RawFetchResponse, errorsSummary: string, errors: { [fieldPath: string]: FieldErrors }) {\n    super(serverResponse, errorsSummary)\n    Object.setPrototypeOf(this, ExpandedSpreeError.prototype)\n    this.name = 'ExpandedSpreeError'\n    this.errors = Object.keys(errors).reduce((acc, fieldPath) => {\n      const keys = fieldPath.split('.')\n      let key = keys.shift()\n      let node = acc\n\n      while (key) {\n        if (!node[key]) {\n          if (keys.length === 0) {\n            node[key] = errors[fieldPath]\n          } else {\n            node[key] = {}\n          }\n        }\n\n        node = node[key]\n        key = keys.shift()\n      }\n\n      return acc\n    }, {})\n  }\n\n  /**\n   * @deprecated This method will be removed in future versions.\n   * Use optional chaining, lodash/get, Final Form's getIn or another\n   * 3rd party library to recreate the behavior of this method.\n   */\n  public getErrors(path: string[]): Errors | FieldErrors | null {\n    let pathPartIndex = 0\n    let node: any = this.errors\n    let pathPossible = true\n\n    while (pathPartIndex < path.length && pathPossible) {\n      const pathPart = path[pathPartIndex]\n\n      if (!(pathPart in Object(node))) {\n        pathPossible = false\n      } else {\n        node = node[pathPart]\n        pathPartIndex += 1\n      }\n    }\n\n    if (!pathPossible) {\n      return null\n    }\n\n    return node\n  }\n}\n","import type { RawFetchRequest } from '../interfaces/RawFetchRequest'\nimport type { RawFetchResponse } from '../interfaces/RawFetchResponse'\nimport SpreeSDKError from './SpreeSDKError'\n\nexport default class FetchError extends SpreeSDKError {\n  public response?: RawFetchResponse\n  public request?: RawFetchRequest\n  public data?: any\n\n  constructor(response?: RawFetchResponse, request?: unknown, data?: unknown, message?: string) {\n    super(message)\n    Object.setPrototypeOf(this, FetchError.prototype)\n    this.name = 'FetchError'\n    this.response = response\n    this.request = request\n    this.data = data\n  }\n}\n","import SpreeSDKError from './SpreeSDKError'\n\nexport default class MisconfigurationError extends SpreeSDKError {\n  constructor(message: string) {\n    super(`Incorrect request setup: ${message}`)\n    Object.setPrototypeOf(this, MisconfigurationError.prototype)\n    this.name = 'MisconfigurationError'\n  }\n}\n","import SpreeSDKError from './SpreeSDKError'\n\nexport default class NoResponseError extends SpreeSDKError {\n  constructor() {\n    super('No response received from Spree')\n    Object.setPrototypeOf(this, NoResponseError.prototype)\n    this.name = 'NoResponseError'\n  }\n}\n","import type { RawFetchResponse } from '../interfaces/RawFetchResponse'\nimport SpreeSDKError from './SpreeSDKError'\n\nexport default class SpreeError extends SpreeSDKError {\n  public serverResponse: RawFetchResponse\n\n  constructor(serverResponse: RawFetchResponse) {\n    super(`Spree returned a HTTP ${serverResponse.status} error code`)\n    Object.setPrototypeOf(this, SpreeError.prototype)\n    this.name = 'SpreeError'\n    this.serverResponse = serverResponse\n  }\n}\n","export default class SpreeSDKError extends Error {\n  constructor(message: string) {\n    super(message)\n    Object.setPrototypeOf(this, SpreeSDKError.prototype)\n    this.name = 'SpreeSDKError'\n  }\n}\n","import BasicSpreeError from './BasicSpreeError'\nimport ExpandedSpreeError from './ExpandedSpreeError'\nimport MisconfigurationError from './MisconfigurationError'\nimport NoResponseError from './NoResponseError'\nimport SpreeError from './SpreeError'\nimport SpreeSDKError from './SpreeSDKError'\nimport FetchError from './FetchError'\nimport DocumentRelationshipError from './DocumentRelationshipError'\n\nexport {\n  BasicSpreeError,\n  ExpandedSpreeError,\n  MisconfigurationError,\n  NoResponseError,\n  SpreeError,\n  SpreeSDKError,\n  FetchError,\n  DocumentRelationshipError\n}\n","import {\n  AuthTokenAttr,\n  AuthTokenParams,\n  RefreshTokenAttr,\n  RefreshTokenParams,\n  RevokeTokenAttr,\n  RevokeTokenParams\n} from '../interfaces/Authentication'\n\nexport const authParams = ({ username, password }: AuthTokenAttr): AuthTokenParams => ({\n  username,\n  password,\n  grant_type: 'password'\n})\n\nexport const refreshParams = ({ refresh_token }: RefreshTokenAttr): RefreshTokenParams => ({\n  refresh_token,\n  grant_type: 'refresh_token'\n})\n\nexport const revokeParams = ({ token }: RevokeTokenAttr): RevokeTokenParams => ({\n  token\n})\n","import type { JsonApiDocument, JsonApiResponse } from '../interfaces/JsonApi'\nimport type { RelationType } from '../interfaces/Relationships'\nimport { DocumentRelationshipError } from '../errors'\n\nconst findDocument = <DocumentType extends JsonApiDocument>(\n  spreeSuccessResponse: JsonApiResponse,\n  relationType: RelationType\n): DocumentType | null => {\n  if (!spreeSuccessResponse.included) {\n    return null\n  }\n\n  return (\n    (spreeSuccessResponse.included.find(\n      (includedObject) => includedObject.type === relationType.type && includedObject.id === relationType.id\n    ) as DocumentType) || null\n  )\n}\n\nconst findRelationshipDocuments = <DocumentType extends JsonApiDocument>(\n  spreeSuccessResponse: JsonApiResponse,\n  sourceDocument: JsonApiDocument,\n  relationshipName: string\n): DocumentType[] => {\n  if (!spreeSuccessResponse.included) {\n    return []\n  }\n\n  const oneOrManyDocumentReferences = (sourceDocument.relationships[relationshipName] || {}).data\n\n  if (!oneOrManyDocumentReferences) {\n    throw new DocumentRelationshipError(`Incorrect relationship ${relationshipName}.`)\n  }\n\n  let documentReferences: RelationType[]\n\n  if (Array.isArray(oneOrManyDocumentReferences)) {\n    documentReferences = oneOrManyDocumentReferences\n  } else {\n    documentReferences = [oneOrManyDocumentReferences]\n  }\n\n  return documentReferences\n    .map<DocumentType>((relationType: RelationType) => findDocument<DocumentType>(spreeSuccessResponse, relationType))\n    .filter(Boolean)\n}\n\nconst findSingleRelationshipDocument = <DocumentType extends JsonApiDocument>(\n  spreeSuccessResponse: JsonApiResponse,\n  sourceDocument: JsonApiDocument,\n  relationshipName: string\n): DocumentType | null => {\n  const documents = findRelationshipDocuments<DocumentType>(spreeSuccessResponse, sourceDocument, relationshipName)\n\n  if (documents.length === 0) {\n    return null\n  }\n\n  return documents[0]\n}\n\nexport { findDocument, findRelationshipDocuments, findSingleRelationshipDocument }\n","// Based on https://github.com/ljharb/qs/blob/master/lib/stringify.js\n\nconst serializeDate = (date: Date) => date.toISOString()\n\nconst isBuffer = (obj) => {\n  if (!obj || typeof obj !== 'object') {\n    return false\n  }\n\n  return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj))\n}\n\nconst isNonNullishPrimitive = (v) =>\n  typeof v === 'string' ||\n  typeof v === 'number' ||\n  typeof v === 'boolean' ||\n  typeof v === 'symbol' ||\n  typeof v === 'bigint'\n\nconst hexTable = (() => {\n  const array = []\n\n  for (let i = 0; i < 256; ++i) {\n    array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase())\n  }\n\n  return array\n})()\n\nconst encode = (str, charset): string => {\n  // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n  // It has been adapted here for stricter adherence to RFC 3986\n  if (str.length === 0) {\n    return str\n  }\n\n  let string = str\n  if (typeof str === 'symbol') {\n    string = Symbol.prototype.toString.call(str)\n  } else if (typeof str !== 'string') {\n    string = String(str)\n  }\n\n  if (charset === 'iso-8859-1') {\n    return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n      return '%26%23' + parseInt($0.slice(2), 16) + '%3B'\n    })\n  }\n\n  let out = ''\n  for (let i = 0; i < string.length; ++i) {\n    let c = string.charCodeAt(i)\n\n    if (\n      c === 0x2d || // -\n      c === 0x2e || // .\n      c === 0x5f || // _\n      c === 0x7e || // ~\n      (c >= 0x30 && c <= 0x39) || // 0-9\n      (c >= 0x41 && c <= 0x5a) || // a-z\n      (c >= 0x61 && c <= 0x7a) // A-Z\n    ) {\n      out += string.charAt(i)\n      continue\n    }\n\n    if (c < 0x80) {\n      out = out + hexTable[c]\n      continue\n    }\n\n    if (c < 0x800) {\n      out = out + (hexTable[0xc0 | (c >> 6)] + hexTable[0x80 | (c & 0x3f)])\n      continue\n    }\n\n    if (c < 0xd800 || c >= 0xe000) {\n      out = out + (hexTable[0xe0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3f)] + hexTable[0x80 | (c & 0x3f)])\n      continue\n    }\n\n    i += 1\n    c = 0x10000 + (((c & 0x3ff) << 10) | (string.charCodeAt(i) & 0x3ff))\n    out +=\n      hexTable[0xf0 | (c >> 18)] +\n      hexTable[0x80 | ((c >> 12) & 0x3f)] +\n      hexTable[0x80 | ((c >> 6) & 0x3f)] +\n      hexTable[0x80 | (c & 0x3f)]\n  }\n\n  return out\n}\n\nconst isArray = Array.isArray\n\nconst push = Array.prototype.push\n\nconst pushToArray = (arr, valueOrArray) => {\n  push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray])\n}\n\nconst rfc3986Formatter = (value): string => {\n  return String(value)\n}\n\nconst generateBracketsArrayPrefix = (prefix: string, _key: string): string => prefix + '[]'\n\nconst charset = 'utf-8'\n\nconst stringify = (source: unknown, prefix: string) => {\n  if (source instanceof Date) {\n    source = serializeDate(source)\n  }\n\n  if (source === null) {\n    source = ''\n  }\n\n  if (isNonNullishPrimitive(source) || isBuffer(source)) {\n    const keyValue = encode(prefix, charset)\n\n    return [rfc3986Formatter(keyValue) + '=' + rfc3986Formatter(encode(source, charset))]\n  }\n\n  const values = []\n\n  if (typeof source === 'undefined') {\n    return values\n  }\n\n  const objKeys = Object.keys(source)\n\n  for (let i = 0; i < objKeys.length; ++i) {\n    const key = objKeys[i]\n    const value = source[key]\n\n    const keyPrefix = isArray(source) ? generateBracketsArrayPrefix(prefix, key) : prefix + ('[' + key + ']')\n\n    pushToArray(values, stringify(value, keyPrefix))\n  }\n\n  return values\n}\n\n/**\n * Serializes object into a query string understood by Spree.\n * Spree uses the \"brackets\" format for serializing arrays which\n * is a different format than used by URLSearchParams.\n */\nconst objectToQuerystring = (source: Record<string, any>): string => {\n  const topLevelKeys = []\n\n  const objKeys = Object.keys(source)\n\n  for (let i = 0; i < objKeys.length; ++i) {\n    const key = objKeys[i]\n\n    pushToArray(topLevelKeys, stringify(source[key], key))\n  }\n\n  return topLevelKeys.join('&')\n}\n\nexport { objectToQuerystring }\n","import * as errors from '../errors'\nimport CastError from '../errors/CastError'\nimport DeserializeError from '../errors/DeserializeError'\nimport type { Result } from '../interfaces/Result'\nimport type { ResultResponse } from '../interfaces/ResultResponse'\n\nconst makeSuccess = <F extends Error, S>(value: S): Result<F, S> => {\n  return {\n    isSuccess: () => true,\n    isFail: () => false,\n    success: () => value,\n    fail: () => {\n      throw new Error('Cannot call fail() on success.')\n    }\n  }\n}\n\nconst makeFail = <F extends Error, S>(value: F): Result<F, S> => {\n  return {\n    isSuccess: () => false,\n    isFail: () => true,\n    success: () => {\n      throw new Error('Cannot call success() on fail.')\n    },\n    fail: () => value\n  }\n}\n\n/**\n * Converts a Result instance into its JSON representation.\n * Not all information is preserved from the Result instance.\n * Most notably, non-enumerable properties are skipped.\n */\nconst toJson = <F extends Error, S>(result: Result<F, S>): { type: string; subtype: string; value?: any } => {\n  if (result.isSuccess()) {\n    return {\n      type: 'SpreeSDKResult',\n      subtype: 'success',\n      value: result.success()\n    }\n  } else {\n    return {\n      type: 'SpreeSDKResult',\n      subtype: 'fail',\n      value: { ...result.fail() }\n    }\n  }\n}\n\nconst castError = (error: { name: string; message: string; stack? }): errors.SpreeSDKError => {\n  if (!(error.name in errors)) {\n    throw new CastError('Error not recognized')\n  }\n\n  return Object.assign(Object.create(errors[error.name].prototype), error)\n}\n\n/**\n * Converts JSON to a Result instance.\n * If the JSON represents a fail, converts the error into an instance of SpreeSDKError its subtype.\n */\nconst fromJson = (json: { [key: string]: any }): Result<errors.SpreeSDKError, any> => {\n  if (json.type === 'SpreeSDKResult') {\n    if (json.subtype === 'success') {\n      return makeSuccess(json.value)\n    } else if (json.subtype === 'fail') {\n      return makeFail(castError(json.value))\n    } else {\n      throw new DeserializeError('Expected success or fail subtype.')\n    }\n  }\n\n  throw new DeserializeError('Unknown signature.')\n}\n\n/**\n * If Spree returns a success response, extracts and returns its data.\n * Otherwise, throws the response's SpreeSDKError. Useful for handling\n * SpreeSDKErrors inside try..catch blocks.\n */\nconst extractSuccess = <ResponseType, T extends ResponseType>(spreeRequest: Promise<ResultResponse<T>>): Promise<T> => {\n  return spreeRequest.then((spreeResponse) => {\n    if (spreeResponse.isFail()) {\n      throw spreeResponse.fail()\n    }\n\n    return spreeResponse.success()\n  })\n}\n\nexport { makeSuccess, makeFail, toJson, fromJson, extractSuccess }\n","import type { IToken } from '../interfaces/Token'\n\nexport const split = (source: Record<string, any>, specialKeys: string[]) => {\n  const result: [Record<string, any>, Record<string, any>] = [{}, {}]\n\n  for (const sourceKey in source) {\n    if (specialKeys.includes(sourceKey)) {\n      result[1][sourceKey] = source[sourceKey]\n    } else {\n      result[0][sourceKey] = source[sourceKey]\n    }\n  }\n\n  return result\n}\n\n/**\n * @deprecated This function is used only to support the old method signatures\n * and will be removed in the future.\n */\nconst squashAndPreparePositionalArguments = (\n  positionalArguments: Record<string, any>[],\n  specialKeys: string[]\n): Record<string, any> & { token: IToken } & { params: Record<string, any> } => {\n  // Using reverse() ensures we treat the first object with priority.\n  // It replicates the order of arguments for endpoints methods.\n  const mergedArguments: Record<string, any> = Object.assign({}, ...positionalArguments.filter(Boolean).reverse())\n  const [restArguments, tokensArguments] = split(mergedArguments, [\n    'order_token',\n    'bearer_token',\n    'orderToken',\n    'bearerToken'\n  ])\n  const [params, specialKeysMapping] = split(restArguments, specialKeys)\n\n  // Extract tokens into IToken for backwards compatibility.\n  let token: IToken\n\n  if (\n    ('order_token' in tokensArguments && 'bearer_token' in tokensArguments) ||\n    ('orderToken' in tokensArguments && 'bearerToken' in tokensArguments)\n  ) {\n    console.warn(\n      'Avoid providing both token types (order token and bearer token) in a request to prevent unexpected results.'\n    )\n  }\n\n  if ('bearer_token' in tokensArguments || 'bearerToken' in tokensArguments) {\n    token = { bearerToken: tokensArguments.bearer_token || tokensArguments.bearerToken }\n  } else if ('order_token' in tokensArguments || 'orderToken' in tokensArguments) {\n    token = { orderToken: tokensArguments.order_token || tokensArguments.orderToken }\n  } else {\n    token = {}\n  }\n\n  return {\n    token,\n    ...specialKeysMapping,\n    params\n  }\n}\n\nexport default squashAndPreparePositionalArguments\n","import Client from './Client'\nimport * as errors from './errors'\nimport * as result from './helpers/result'\nimport * as jsonApi from './helpers/jsonApi'\nimport * as request from './helpers/request'\nimport Http from './Http'\nimport routes, { storefrontPath } from './routes'\nimport * as endpoints from './endpoints'\nimport makeClient from './makeClient'\n\nexport { Client, Http, result, errors, makeClient, endpoints, routes, storefrontPath, jsonApi, request }\n","import { WithCommonOptions } from './WithCommonOptions'\n\nexport interface AuthTokenAttr {\n  username: string\n  password: string\n}\n\nexport interface RefreshTokenAttr {\n  refresh_token: string\n}\n\nexport interface RevokeTokenAttr {\n  token: string\n}\n\nexport interface AuthTokenParams {\n  username: string\n  password: string\n  grant_type: 'password'\n}\n\nexport interface RefreshTokenParams {\n  refresh_token: string\n  grant_type: 'refresh_token'\n}\n\nexport interface RevokeTokenParams {\n  token: string\n}\n\nexport type GetTokenOptions = WithCommonOptions<null, AuthTokenAttr>\n\nexport type RefreshTokenOptions = WithCommonOptions<null, RefreshTokenAttr>\n\nexport type RevokeTokenOptions = WithCommonOptions<null, RevokeTokenAttr>\n","import Client from './Client'\nimport type { IClientConfig } from './interfaces/ClientConfig'\n\nconst makeClient = (config: IClientConfig): Client => new Client(config)\n\nexport default makeClient\n","export const storefrontPath = `api/v2/storefront`\n\nconst endpoints = {\n  productsPath: (): string => `${storefrontPath}/products`,\n  productPath: (id: string): string => `${storefrontPath}/products/${encodeURIComponent(id)}`,\n  taxonsPath: (): string => `${storefrontPath}/taxons`,\n  taxonPath: (id: string): string => `${storefrontPath}/taxons/${encodeURIComponent(id)}`,\n  countriesPath: (): string => `${storefrontPath}/countries`,\n  countryPath: (iso: string): string => `${storefrontPath}/countries/${encodeURIComponent(iso)}`,\n  cartPath: (): string => `${storefrontPath}/cart`,\n  cartAddItemPath: (): string => `${storefrontPath}/cart/add_item`,\n  cartRemoveItemPath: (id: string): string => `${storefrontPath}/cart/remove_line_item/${encodeURIComponent(id)}`,\n  cartEmptyPath: (): string => `${storefrontPath}/cart/empty`,\n  cartSetItemQuantity: (): string => `${storefrontPath}/cart/set_quantity`,\n  cartApplyCodePath: (): string => `${storefrontPath}/cart/apply_coupon_code`,\n  cartRemoveCodePath: (code?: string): string =>\n    `${storefrontPath}/cart/remove_coupon_code/${encodeURIComponent(code)}`,\n  cartRemoveAllCoupons: (): string => `${storefrontPath}/cart/remove_coupon_code`,\n  /**\n   * @deprecated Use {@link cartEstimateShippingRatesPath} instead.\n   */\n  cartEstimateShippingMethodsPath: (): string => `${storefrontPath}/cart/estimate_shipping_rates`,\n  cartEstimateShippingRatesPath: (): string => `${storefrontPath}/cart/estimate_shipping_rates`,\n  cartAssociatePath: (): string => `${storefrontPath}/cart/associate`,\n  cartChangeCurrencyPath: (): string => `${storefrontPath}/cart/change_currency`,\n  checkoutPath: (): string => `${storefrontPath}/checkout`,\n  checkoutNextPath: (): string => `${storefrontPath}/checkout/next`,\n  checkoutAdvancePath: (): string => `${storefrontPath}/checkout/advance`,\n  checkoutCompletePath: (): string => `${storefrontPath}/checkout/complete`,\n  checkoutAddStoreCreditsPath: (): string => `${storefrontPath}/checkout/add_store_credit`,\n  checkoutRemoveStoreCreditsPath: (): string => `${storefrontPath}/checkout/remove_store_credit`,\n  checkoutPaymentMethodsPath: (): string => `${storefrontPath}/checkout/payment_methods`,\n  /**\n   * @deprecated Use {@link checkoutShippingRatesPath} instead.\n   */\n  checkoutShippingMethodsPath: (): string => `${storefrontPath}/checkout/shipping_rates`,\n  checkoutShippingRatesPath: (): string => `${storefrontPath}/checkout/shipping_rates`,\n  checkoutSelectShippingMethodPath: (): string => `${storefrontPath}/checkout/select_shipping_method`,\n  checkoutAddPaymentPath: (): string => `${storefrontPath}/checkout/create_payment`,\n  checkoutCreateStripeSessionPath: (): string => `${storefrontPath}/checkout/create_stripe_session`,\n  oauthTokenPath: (): string => `spree_oauth/token`,\n  oauthRevokePath: (): string => `spree_oauth/revoke`,\n  accountPath: (): string => `${storefrontPath}/account`,\n  accountAddressPath: (id: string): string => `${storefrontPath}/account/addresses/${encodeURIComponent(id)}`,\n  accountAddressesPath: (): string => `${storefrontPath}/account/addresses`,\n  accountAddressRemovePath: (id: string): string => `${storefrontPath}/account/addresses/${encodeURIComponent(id)}`,\n  accountConfirmPath: (confirmationToken: string): string =>\n    `${storefrontPath}/account_confirmations/${encodeURIComponent(confirmationToken)}`,\n  accountCreditCardsPath: (): string => `${storefrontPath}/account/credit_cards`,\n  accountDefaultCreditCardPath: (): string => `${storefrontPath}/account/credit_cards/default`,\n  accountCreditCardRemovePath: (id: string): string =>\n    `${storefrontPath}/account/credit_cards/${encodeURIComponent(id)}`,\n  accountCompletedOrdersPath: (): string => `${storefrontPath}/account/orders`,\n  accountCompletedOrderPath: (orderNumber: string): string =>\n    `${storefrontPath}/account/orders/${encodeURIComponent(orderNumber)}`,\n  forgotPasswordPath: (): string => `${storefrontPath}/passwords`,\n  resetPasswordPath: (resetPasswordToken: string): string =>\n    `${storefrontPath}/passwords/${encodeURIComponent(resetPasswordToken)}`,\n  orderStatusPath: (orderNumber: string): string => `${storefrontPath}/order_status/${encodeURIComponent(orderNumber)}`,\n  pagesPath: (): string => `${storefrontPath}/cms_pages`,\n  pagePath: (id: string): string => `${storefrontPath}/cms_pages/${encodeURIComponent(id)}`,\n  defaultCountryPath: (): string => `${storefrontPath}/countries/default`,\n  digitalAssetsDownloadPath: (token: string): string => `${storefrontPath}/digitals/${encodeURIComponent(token)}`,\n  menusPath: (): string => `${storefrontPath}/menus`,\n  menuPath: (id: string): string => `${storefrontPath}/menus/${encodeURIComponent(id)}`,\n  wishlistsPath: (): string => `${storefrontPath}/wishlists`,\n  wishlistPath: (token: string): string => `${storefrontPath}/wishlists/${encodeURIComponent(token)}`,\n  defaultWishlistPath: (): string => `${storefrontPath}/wishlists/default`,\n  wishlistsAddWishedItemPath: (token: string): string =>\n    `${storefrontPath}/wishlists/${encodeURIComponent(token)}/add_item`,\n  wishlistsUpdateWishedItemQuantityPath: (token: string, id: string): string =>\n    `${storefrontPath}/wishlists/${encodeURIComponent(token)}/set_item_quantity/${encodeURIComponent(id)}`,\n  wishlistsRemoveWishedItemPath: (token: string, id: string): string =>\n    `${storefrontPath}/wishlists/${encodeURIComponent(token)}/remove_item/${encodeURIComponent(id)}`\n}\n\nexport default endpoints\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(341);\n"],"names":["root","factory","exports","module","define","amd","self","constructor","customOptions","defaultOptions","host","globalThis","process","env","SPREE_HOST","options","fetcherOptions","this","fetcher","createFetcher","addEndpoints","account","makeAccount","authentication","makeAuthentication","cart","makeCart","checkout","makeCheckout","countries","makeCountries","order","makeOrder","pages","makePages","products","makeProducts","taxons","makeTaxons","digitalAssets","makeDigitalAssets","menus","makeMenus","wishlists","makeWishlists","Account","Authentication","Cart","Checkout","Countries","Order","Pages","Products","Taxons","DigitalAssets","Menus","Wishlists","spreeResponse","method","url","tokens","params","responseParsing","headers","spreeOrderHeaders","fetchOptions","response","fetch","result","makeSuccess","data","error","makeFail","processError","classifySpreeError","errorSummary","errors","processSpreeError","request","NoResponseError","MisconfigurationError","message","SpreeSDKError","errorType","ExpandedSpreeError","BasicSpreeError","SpreeError","header","orderToken","bearerToken","accountInfo","allArguments","tokenOrOptions","positionalParams","token","accountPath","creditCardsList","accountCreditCardsPath","defaultCreditCard","accountDefaultCreditCardPath","removeCreditCard","positionalId","id","accountCreditCardRemovePath","completedOrdersList","accountCompletedOrdersPath","completedOrder","positionalOrderNumber","order_number","accountCompletedOrderPath","create","paramsOrOptions","confirm","confirmationTokenOrOptions","confirmation_token","accountConfirmPath","forgotPassword","forgotPasswordPath","resetPassword","resetPasswordTokenOrOptions","reset_password_token","resetPasswordToken","resetPasswordPath","update","addressesList","accountAddressesPath","showAddress","accountAddressPath","createAddress","removeAddress","accountAddressRemovePath","updateAddress","getToken","oauthTokenPath","authParams","refreshToken","refreshParams","revokeToken","oauthRevokePath","revokeParams","show","cartPath","addItem","cartAddItemPath","removeItem","cartRemoveItemPath","emptyCart","cartEmptyPath","remove","setQuantity","cartSetItemQuantity","applyCouponCode","cartApplyCodePath","removeCouponCode","positionalCode","code","route","cartRemoveCodePath","cartRemoveAllCoupons","removeAllCoupons","estimateShippingMethods","cartEstimateShippingMethodsPath","estimateShippingRates","cartEstimateShippingRatesPath","associateGuestCart","cartAssociatePath","changeCurrency","cartChangeCurrencyPath","orderNext","checkoutNextPath","orderUpdate","checkoutPath","advance","checkoutAdvancePath","complete","checkoutCompletePath","addStoreCredits","checkoutAddStoreCreditsPath","removeStoreCredits","checkoutRemoveStoreCreditsPath","paymentMethods","checkoutPaymentMethodsPath","shippingMethods","checkoutShippingMethodsPath","shippingRates","checkoutShippingRatesPath","selectShippingMethod","checkoutSelectShippingMethodPath","addPayment","checkoutAddPaymentPath","createStripeSession","checkoutCreateStripeSessionPath","list","countriesPath","isoOrOptions","iso","countryPath","default","defaultCountryPath","download","positionalAssetToken","asset_token","digitalAssetsDownloadPath","menusPath","idOrOptions","menuPath","status","orderStatusPath","pagesPath","pagePath","productsPath","positionalToken","productPath","taxonsPath","taxonPath","wishlistsPath","positionalWishlistToken","wishlist_token","wishlistPath","defaultWishlistPath","addWishedItem","wishlistsAddWishedItemPath","updateWishedItem","wishlistsUpdateWishedItemQuantityPath","removeWishedItem","wishlistsRemoveWishedItemPath","serverResponse","errorsSummary","super","Object","setPrototypeOf","prototype","name","summary","CastError","DeserializeError","DocumentRelationshipError","keys","reduce","acc","fieldPath","split","key","shift","node","length","getErrors","path","pathPartIndex","pathPossible","pathPart","FetchError","Error","username","password","grant_type","refresh_token","findDocument","spreeSuccessResponse","relationType","included","find","includedObject","type","findRelationshipDocuments","sourceDocument","relationshipName","oneOrManyDocumentReferences","relationships","documentReferences","Array","isArray","map","filter","Boolean","findSingleRelationshipDocument","documents","hexTable","array","i","push","toString","toUpperCase","encode","str","charset","string","Symbol","call","String","escape","replace","$0","parseInt","slice","out","c","charCodeAt","charAt","pushToArray","arr","valueOrArray","apply","rfc3986Formatter","value","generateBracketsArrayPrefix","prefix","_key","stringify","source","obj","v","Date","toISOString","isBuffer","keyValue","values","objKeys","keyPrefix","objectToQuerystring","topLevelKeys","join","isSuccess","isFail","success","fail","toJson","subtype","fromJson","json","assign","castError","extractSuccess","spreeRequest","then","specialKeys","sourceKey","includes","positionalArguments","mergedArguments","reverse","restArguments","tokensArguments","specialKeysMapping","console","warn","bearer_token","order_token","Client","jsonApi","Http","routes","storefrontPath","endpoints","makeClient","config","encodeURIComponent","confirmationToken","orderNumber","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}