export declare type DeepAnyObject<T> = T extends (...args: any[]) => any ? T : T extends Array<infer U> ? _DeepAnyObjectArray<U> : T extends object ? _DeepAnyObjectObject<T> : T | undefined;
interface _DeepAnyObjectArray<T> extends Array<DeepAnyObject<T>> {
}
declare type _DeepAnyObjectObject<T> = {
    [P in keyof T]: DeepAnyObject<T[P]>;
} & Record<string, any>;
export {};
