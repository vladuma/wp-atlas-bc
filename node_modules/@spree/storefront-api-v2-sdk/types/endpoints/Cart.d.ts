import Http from '../Http';
import type { AddItem, CouponCode, EstimateShippingMethods, SetQuantity, AssociateCart, ChangeCurrency, EstimateShippingRates } from '../interfaces/endpoints/CartClass';
import type { EstimatedShippingRatesResult, IEstimatedShippingMethodsResult } from '../interfaces/EstimatedShippingMethod';
import type { IOrderResult } from '../interfaces/Order';
import type { NoContentResult } from '../interfaces/NoContent';
import type { IQuery } from '../interfaces/Query';
import type { IToken } from '../interfaces/Token';
import type { AddItemOptions, ApplyCouponCodeOptions, AssociateGuestCartOptions, ChangeCurrencyOptions, CreateOptions, EmptyCartOptions, EstimateShippingRatesOptions, RemoveAllCouponsOptions, RemoveCouponCodeOptions, RemoveItemOptions, RemoveOptions, SetQuantityOptions, ShowOptions } from '../interfaces/Cart';
export default class Cart extends Http {
    show(options: ShowOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    show(token: IToken, params?: IQuery): Promise<IOrderResult>;
    create(options?: CreateOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    create(token?: IToken, params?: IQuery): Promise<IOrderResult>;
    addItem(options: AddItemOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    addItem(token: IToken, params: AddItem): Promise<IOrderResult>;
    removeItem(options: RemoveItemOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    removeItem(token: IToken, id: string, params?: IQuery): Promise<IOrderResult>;
    emptyCart(options: EmptyCartOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    emptyCart(token: IToken, params?: IQuery): Promise<IOrderResult>;
    remove(options: RemoveOptions): Promise<NoContentResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    remove(token: IToken): Promise<NoContentResult>;
    setQuantity(options: SetQuantityOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    setQuantity(token: IToken, params: SetQuantity): Promise<IOrderResult>;
    applyCouponCode(options: ApplyCouponCodeOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    applyCouponCode(token: IToken, params: CouponCode): Promise<IOrderResult>;
    removeCouponCode(options: RemoveCouponCodeOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    removeCouponCode(token: IToken, code: string, params?: IQuery): Promise<IOrderResult>;
    removeAllCoupons(options: RemoveAllCouponsOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    removeAllCoupons(token: IToken, params: IQuery): Promise<IOrderResult>;
    /**
     * @deprecated Use {@link estimateShippingRates} instead.
     */
    estimateShippingMethods(token: IToken, params: EstimateShippingMethods): Promise<IEstimatedShippingMethodsResult>;
    estimateShippingRates(options: EstimateShippingRatesOptions): Promise<EstimatedShippingRatesResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    estimateShippingRates(token: IToken, params: EstimateShippingRates): Promise<EstimatedShippingRatesResult>;
    associateGuestCart(options: AssociateGuestCartOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    associateGuestCart(token: IToken, params: AssociateCart): Promise<IOrderResult>;
    changeCurrency(options: ChangeCurrencyOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    changeCurrency(token: IToken, params: ChangeCurrency): Promise<IOrderResult>;
}
