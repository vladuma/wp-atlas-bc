import Http from '../Http';
import type { IAccountResult, IAccountConfirmationResult, AccountAddressesResult, AccountAddressResult, AccountAddressParams, ForgotPasswordParams, ResetPasswordParams, AccountInfoOptions, CreditCardsListOptions, DefaultCreditCardOptions, RemoveCreditCardOptions, CompletedOrdersListOptions, CompletedOrderOptions, CreateOptions, ConfirmOptions, ForgotPasswordOptions, ResetPasswordOptions, UpdateOptions, AddressesListOptions, ShowAddressOptions, CreateAddressOptions, RemoveAddressOptions, UpdateAddressOptions } from '../interfaces/Account';
import type { ICreditCardResult, ICreditCardsResult } from '../interfaces/CreditCard';
import type { NoContentResult } from '../interfaces/NoContent';
import type { IOrderResult, IOrdersResult } from '../interfaces/Order';
import type { IQuery } from '../interfaces/Query';
import type { IToken } from '../interfaces/Token';
export default class Account extends Http {
    accountInfo(options: AccountInfoOptions): Promise<IAccountResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    accountInfo(token: IToken, params?: IQuery): Promise<IAccountResult>;
    creditCardsList(options: CreditCardsListOptions): Promise<ICreditCardsResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    creditCardsList(token: IToken, params?: IQuery): Promise<ICreditCardsResult>;
    defaultCreditCard(options: DefaultCreditCardOptions): Promise<ICreditCardResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    defaultCreditCard(token: IToken, params?: IQuery): Promise<ICreditCardResult>;
    removeCreditCard(options: RemoveCreditCardOptions): Promise<NoContentResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    removeCreditCard(token: IToken, id: string, params?: IQuery): Promise<NoContentResult>;
    completedOrdersList(options: CompletedOrdersListOptions): Promise<IOrdersResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    completedOrdersList(token: IToken, params?: IQuery): Promise<IOrdersResult>;
    completedOrder(options: CompletedOrderOptions): Promise<IOrderResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    completedOrder(token: IToken, orderNumber: string, params?: IQuery): Promise<IOrderResult>;
    create(options: CreateOptions): Promise<IAccountResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    create(params: IQuery): Promise<IAccountResult>;
    confirm(option: ConfirmOptions): Promise<IAccountConfirmationResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    confirm(confirmationToken: string): Promise<IAccountConfirmationResult>;
    forgotPassword(options: ForgotPasswordOptions): Promise<NoContentResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    forgotPassword(params: ForgotPasswordParams): Promise<NoContentResult>;
    resetPassword(options: ResetPasswordOptions): Promise<NoContentResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    resetPassword(resetPasswordToken: string, params: ResetPasswordParams): Promise<NoContentResult>;
    update(options: UpdateOptions): Promise<IAccountResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    update(token: IToken, params: IQuery): Promise<IAccountResult>;
    addressesList(options: AddressesListOptions): Promise<AccountAddressesResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    addressesList(token: IToken): Promise<AccountAddressesResult>;
    showAddress(options: ShowAddressOptions): Promise<AccountAddressResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    showAddress(token: IToken, addressId: string, params?: IQuery): Promise<AccountAddressResult>;
    createAddress(options: CreateAddressOptions): Promise<AccountAddressResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    createAddress(token: IToken, params: AccountAddressParams): Promise<AccountAddressResult>;
    removeAddress(options: RemoveAddressOptions): Promise<NoContentResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    removeAddress(token: IToken, id: string, params?: IQuery): Promise<NoContentResult>;
    updateAddress(options: UpdateAddressOptions): Promise<AccountAddressResult>;
    /**
     * @deprecated Use the combined options signature instead.
     */
    updateAddress(token: IToken, addressId: string, params: AccountAddressParams): Promise<AccountAddressResult>;
}
