'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

class EventHandler {
  constructor() {
    this.hasFetchSubscribers = false;
    this.onFetchListeners = new Set();
    this.onCacheChangeListeners = new Set();
  }
  sendCacheChange(data) {
    for (const listener of this.onCacheChangeListeners)
      listener(data);
  }
  sendFetchPromise(data, selections) {
    for (const listener of this.onFetchListeners)
      listener(data, selections);
  }
  onCacheChangeSubscribe(fn) {
    const self = this;
    self.onCacheChangeListeners.add(fn);
    return function unsubscribe() {
      self.onCacheChangeListeners.delete(fn);
    };
  }
  onFetchSubscribe(fn) {
    const self = this;
    self.hasFetchSubscribers = Boolean(self.onFetchListeners.add(fn).size);
    return function unsubscribe() {
      self.onFetchListeners.delete(fn);
      self.hasFetchSubscribers = Boolean(self.onFetchListeners.size);
    };
  }
}

exports.EventHandler = EventHandler;
