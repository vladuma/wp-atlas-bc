'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const object = require('../Utils/object.js');
require('lodash/mergeWith.js');

function getFirstNonNullValue(list) {
  for (const value of list)
    if (value != null)
      return value;
}
function prepass(v, ...keys) {
  if (v == null)
    return v;
  for (const composedKeys of keys) {
    const separatedKeys = typeof composedKeys === "string" ? composedKeys.split(".") : composedKeys;
    let obj = v;
    for (const key of separatedKeys) {
      if (obj && key) {
        let property = typeof key === "object" ? key.field : key;
        let variables = typeof key === "object" ? key.variables : void 0;
        if (Array.isArray(obj)) {
          const firstNonNull = getFirstNonNullValue(obj);
          if (firstNonNull) {
            obj = firstNonNull;
          } else
            break;
        }
        if (object.isObject(obj)) {
          if (property in obj) {
            const value = obj[property];
            if (typeof value === "function") {
              obj = value(variables);
            } else {
              obj = value;
            }
          } else
            break;
        } else
          break;
      } else
        break;
    }
  }
  return v;
}

exports.prepass = prepass;
