'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function isFunction(v) {
  return typeof v === "function";
}
function createRefetch(innerState, resolveSelections, inlineResolved) {
  const { accessorCache } = innerState;
  const inlineResolveRefetch = {
    refetch: true
  };
  async function refetch(refetchArg) {
    if (isFunction(refetchArg))
      return inlineResolved(refetchArg, inlineResolveRefetch);
    if (accessorCache.isProxy(refetchArg)) {
      const selectionSet = accessorCache.getSelectionSetHistory(refetchArg);
      if (selectionSet) {
        await resolveSelections(selectionSet, void 0, {
          ignoreResolveCache: true
        });
      }
      return refetchArg;
    }
    if (process.env.NODE_ENV !== "production") {
      console.warn("gqty: Invalid proxy to refetch!", refetchArg);
    }
    return refetchArg;
  }
  return refetch;
}

exports.createRefetch = createRefetch;
exports.isFunction = isFunction;
