'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const retry = require('./retry.js');

class GQtyError extends Error {
  constructor(message, {
    graphQLErrors,
    otherError
  } = {}) {
    super(message);
    if (graphQLErrors)
      this.graphQLErrors = graphQLErrors;
    if (otherError !== void 0)
      this.otherError = otherError;
  }
  toJSON() {
    return {
      message: this.message,
      graphQLErrors: this.graphQLErrors,
      otherError: this.otherError
    };
  }
  static create(error, _caller) {
    let newError;
    if (error instanceof GQtyError) {
      newError = error;
    } else if (error instanceof Error) {
      newError = Object.assign(new GQtyError(error.message), error);
    } else {
      newError = new GQtyError("Unexpected error type", {
        otherError: error
      });
    }
    return newError;
  }
  static fromGraphQLErrors(errors) {
    return errors.length > 1 ? new GQtyError(`GraphQL Errors${process.env.NODE_ENV === "production" ? "" : ", please check .graphQLErrors property"}`, {
      graphQLErrors: errors
    }) : new GQtyError(errors[0].message, {
      graphQLErrors: errors
    });
  }
}

exports.doRetry = retry.doRetry;
exports.GQtyError = GQtyError;
