function decycle(object) {
  var objects = [], paths = [];
  return function derez(value2, path2) {
    var i2, name2, nu;
    if (typeof value2 === "object" && value2 !== null && !(value2 instanceof Boolean) && !(value2 instanceof Date) && !(value2 instanceof Number) && !(value2 instanceof RegExp) && !(value2 instanceof String)) {
      for (i2 = 0; i2 < objects.length; i2 += 1) {
        if (objects[i2] === value2) {
          return { $ref: paths[i2] };
        }
      }
      objects.push(value2);
      paths.push(path2);
      if (Object.prototype.toString.apply(value2) === "[object Array]") {
        nu = [];
        for (i2 = 0; i2 < value2.length; i2 += 1) {
          nu[i2] = derez(value2[i2], path2 + "[" + i2 + "]");
        }
      } else {
        nu = {};
        for (name2 in value2) {
          if (Object.prototype.hasOwnProperty.call(value2, name2)) {
            nu[name2] = derez(value2[name2], path2 + "[" + JSON.stringify(name2) + "]");
          }
        }
      }
      return nu;
    }
    return value2;
  }(object, "$");
}
function retrocycle($) {
  var px = /^\$(?:\[(?:\d+|\"(?:[^\\\"\u0000-\u001f]|\\([\\\"\/bfnrt]|u[0-9a-zA-Z]{4}))*\")\])*$/;
  (function rez(value) {
    var i, item, name, path;
    if (value && typeof value === "object") {
      if (Object.prototype.toString.apply(value) === "[object Array]") {
        for (i = 0; i < value.length; i += 1) {
          item = value[i];
          if (item && typeof item === "object") {
            path = item.$ref;
            if (typeof path === "string" && px.test(path)) {
              value[i] = eval(path);
            } else {
              rez(item);
            }
          }
        }
      } else {
        for (name in value) {
          if (typeof value[name] === "object") {
            item = value[name];
            if (item) {
              path = item.$ref;
              if (typeof path === "string" && px.test(path)) {
                value[name] = eval(path);
              } else {
                rez(item);
              }
            }
          }
        }
      }
    }
  })($);
  return $;
}

export { decycle, retrocycle };
