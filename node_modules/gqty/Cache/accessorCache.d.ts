import { Selection } from '../Selection';
export interface ProxyAccessor extends Object {
    __proxy?: undefined;
}
export interface AccessorCache {
    getAccessor: (selection: Selection, cacheValue: unknown, proxyFactory: () => ProxyAccessor) => ProxyAccessor;
    getArrayAccessor: (selection: Selection, reference: unknown[], proxyFactory: () => ProxyAccessor) => ProxyAccessor;
    isProxy: (obj: any) => obj is ProxyAccessor;
    getProxySelection: (proxy: ProxyAccessor) => Selection | undefined;
    addSelectionToAccessorHistory: (accessor: ProxyAccessor, selection: Selection) => void;
    getSelectionSetHistory: (accessor: ProxyAccessor) => Set<Selection> | undefined;
    addAccessorChild: (parent: ProxyAccessor, child: ProxyAccessor | null) => void;
}
export declare function createAccessorCache(): AccessorCache;
