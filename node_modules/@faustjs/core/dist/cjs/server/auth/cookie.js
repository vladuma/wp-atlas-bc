"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cookies = void 0;
const isString_js_1 = __importDefault(require("lodash/isString.js"));
const cookie_1 = __importDefault(require("cookie"));
const index_js_1 = require("../../utils/index.js");
class Cookies {
    constructor(req, res) {
        this.cookies = {};
        this.request = req;
        this.response = res;
        this.cookies = cookie_1.default.parse(this.request.headers.cookie || '');
    }
    getCookie(key, { encoded = true, isJson = false } = {}) {
        const value = this.cookies[key];
        if (!(0, isString_js_1.default)(value)) {
            return;
        }
        const valueStr = encoded ? (0, index_js_1.base64Decode)(value) : value;
        return isJson ? JSON.parse(valueStr) : valueStr;
    }
    setCookie(key, value, { encoded = true, isJson = false, ...serializeOptions } = {}) {
        var _a;
        const valueStr = isJson ? JSON.stringify(value) : value;
        const cookieValue = encoded ? (0, index_js_1.base64Encode)(valueStr) : valueStr;
        this.cookies[key] = cookieValue;
        (_a = this.response) === null || _a === void 0 ? void 0 : _a.setHeader('Set-Cookie', cookie_1.default.serialize(key, cookieValue, serializeOptions));
    }
    removeCookie(key) {
        var _a;
        delete this.cookies[key];
        (_a = this.response) === null || _a === void 0 ? void 0 : _a.setHeader('Set-Cookie', cookie_1.default.serialize(key, '', {
            expires: new Date(0),
        }));
    }
}
exports.Cookies = Cookies;
