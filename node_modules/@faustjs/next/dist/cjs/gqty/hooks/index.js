"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAuthHooks = exports.createHooks = void 0;
const useAuth_js_1 = require("./useAuth.js");
const useLazyQuery_js_1 = require("./useLazyQuery.js");
const useMutation_js_1 = require("./useMutation.js");
const usePaginatedQuery_js_1 = require("./usePaginatedQuery.js");
const useQuery_js_1 = require("./useQuery.js");
const useSubscription_js_1 = require("./useSubscription.js");
const useTransactionQuery_js_1 = require("./useTransactionQuery.js");
const useHydrateCache_js_1 = require("./useHydrateCache.js");
const useCategory_js_1 = require("./useCategory.js");
const usePosts_js_1 = require("./usePosts.js");
const usePost_js_1 = require("./usePost.js");
const usePage_js_1 = require("./usePage.js");
const usePreview_js_1 = require("./usePreview.js");
const usePreviewNode_js_1 = require("./usePreviewNode.js");
const useLogin_js_1 = require("./useLogin.js");
const useLogout_js_1 = require("./useLogout.js");
function createHooks(useClient) {
    const useQuery = (0, useQuery_js_1.create)(useClient);
    const useMutation = (0, useMutation_js_1.create)(useClient);
    return {
        useQuery,
        useLazyQuery: (0, useLazyQuery_js_1.create)(useClient),
        useMutation,
        usePaginatedQuery: (0, usePaginatedQuery_js_1.create)(useClient),
        useSubscription: (0, useSubscription_js_1.create)(useClient),
        useTransactionQuery: (0, useTransactionQuery_js_1.create)(useClient),
        useHydrateCache: (0, useHydrateCache_js_1.create)(useClient),
        useCategory: (0, useCategory_js_1.create)(useQuery),
        usePosts: (0, usePosts_js_1.create)(useQuery),
        usePost: (0, usePost_js_1.create)(useQuery),
        usePage: (0, usePage_js_1.create)(useQuery),
    };
}
exports.createHooks = createHooks;
function createAuthHooks(useClient) {
    const useQuery = (0, useQuery_js_1.create)(useClient);
    const useAuth = (0, useAuth_js_1.create)();
    const useMutation = (0, useMutation_js_1.create)(useClient);
    return {
        useQuery,
        useAuth,
        useLazyQuery: (0, useLazyQuery_js_1.create)(useClient),
        useMutation,
        usePaginatedQuery: (0, usePaginatedQuery_js_1.create)(useClient),
        useSubscription: (0, useSubscription_js_1.create)(useClient),
        useTransactionQuery: (0, useTransactionQuery_js_1.create)(useClient),
        useHydrateCache: (0, useHydrateCache_js_1.create)(useClient),
        useCategory: (0, useCategory_js_1.create)(useQuery),
        usePosts: (0, usePosts_js_1.create)(useQuery),
        usePost: (0, usePost_js_1.create)(useQuery),
        usePage: (0, usePage_js_1.create)(useQuery),
        usePreview: (0, usePreview_js_1.create)(useAuth, useQuery),
        usePreviewNode: (0, usePreviewNode_js_1.create)(useAuth, useQuery),
        useLogin: (0, useLogin_js_1.create)(useMutation),
        useLogout: (0, useLogout_js_1.create)(),
    };
}
exports.createAuthHooks = createAuthHooks;
