"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.logQueries = void 0;
const defaults_js_1 = __importDefault(require("lodash/defaults.js"));
async function logQueries(
// eslint-disable-next-line @typescript-eslint/no-explicit-any
client, options) {
    try {
        const { createLogger } = await Promise.resolve().then(() => __importStar(require('@gqty/logger')));
        const logOptions = (0, defaults_js_1.default)({}, options, {
            showSelections: false,
            showCache: false,
        });
        const logger = createLogger(client.client, logOptions);
        const authLogger = createLogger(client.auth.client, logOptions);
        const unsubLogger = logger.start();
        const unsubAuthLogger = authLogger.start();
        return () => {
            unsubLogger();
            unsubAuthLogger();
        };
    }
    catch (e) {
        return () => { };
    }
}
exports.logQueries = logQueries;
