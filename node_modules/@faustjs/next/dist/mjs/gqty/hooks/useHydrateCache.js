import { useEffect, useRef } from 'react';
import isString from 'lodash/isString.js';
import isObject from 'lodash/isObject.js';
import isFunction from 'lodash/isFunction.js';
export function create(useClient) {
    return ({ cacheSnapshot, shouldRefetch }) => {
        const snapshotCache = useRef('');
        const { client } = useClient();
        if (isString(cacheSnapshot) && snapshotCache.current !== cacheSnapshot) {
            snapshotCache.current = cacheSnapshot;
            client.hydrateCache({ cacheSnapshot, shouldRefetch: false });
        }
        useEffect(() => {
            if (!isObject(client) || !isFunction(client.refetch)) {
                return;
            }
            if (shouldRefetch) {
                client.refetch(client.query).catch(console.error);
            }
        }, [shouldRefetch, client]);
    };
}
